{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nSakaDeco Group is a comprehensive event decoration and interior design platform offering multiple services through distinct business units. The application provides an e-commerce marketplace for party supplies, custom product personalization, equipment rental, event planning services, home organization, and business coordination. Built as a full-stack web application with React frontend and Express backend, it features a multi-tenant service architecture where each business unit (Shop, CrÃ©a, Rent, Events, Home, Co) operates as a specialized service with its own branding and functionality. The modern interface is inspired by professional decoration websites like M&Paillettes.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **Framework**: React 18 with TypeScript using Vite as the build tool\n- **Routing**: Wouter for client-side routing with service-specific pages\n- **State Management**: TanStack Query for server state management and caching\n- **UI Components**: Radix UI primitives with shadcn/ui component library\n- **Styling**: Tailwind CSS with custom brand colors for each service unit\n- **Authentication**: Integration with Replit Auth for user management\n\n## Backend Architecture\n- **Runtime**: Node.js with Express.js framework\n- **Language**: TypeScript with ES modules\n- **Database**: PostgreSQL with Drizzle ORM for type-safe database operations\n- **Session Management**: Express sessions with PostgreSQL store using connect-pg-simple\n- **API Design**: RESTful API with service-specific endpoints for products, orders, rentals, quotes\n- **Development Setup**: Vite middleware integration for hot module replacement\n\n## Data Storage Solutions\n- **Primary Database**: PostgreSQL hosted on Neon for production scalability\n- **ORM**: Drizzle with code-first schema definitions in shared directory\n- **Schema Organization**: Separate tables for users, products, orders, rentals, quotes with proper relationships\n- **Session Storage**: PostgreSQL-backed session store for authentication persistence\n- **File Storage**: Unsplash integration for product imagery (development/demo purposes)\n\n## Authentication and Authorization\n- **Authentication Provider**: Replit OpenID Connect integration\n- **Session Management**: Secure HTTP-only cookies with PostgreSQL session store\n- **Authorization**: Role-based access control with user/admin roles\n- **User Management**: Profile management with Stripe customer integration\n- **Security**: CSRF protection and secure session configuration\n\n## External Dependencies\n- **Database Hosting**: Neon serverless PostgreSQL for scalable data storage\n- **Authentication Service**: Replit OIDC for seamless user authentication in Replit environment\n- **UI Components**: Radix UI for accessible component primitives\n- **Styling Framework**: Tailwind CSS for utility-first styling approach\n- **Image Service**: Unsplash API for high-quality product and service imagery\n- **Font Integration**: Google Fonts (Playfair Display, Montserrat) for brand typography\n- **Development Tools**: TypeScript for type safety, ESLint for code quality\n- **Payment Processing**: (Future implementation - currently disabled for development)","size_bytes":3262},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        // SKD Brand Colors\n        gold: \"var(--gold)\",\n        'skd-shop': \"var(--skd-shop)\",\n        'skd-crea': \"var(--skd-crea)\",\n        'skd-rent': \"var(--skd-rent)\",\n        'skd-events': \"var(--skd-events)\",\n        'skd-home': \"var(--skd-home)\",\n        'skd-co': \"var(--skd-co)\",\n      },\n      fontFamily: {\n        sans: [\"var(--font-montserrat)\", \"Montserrat\", \"sans-serif\"],\n        serif: [\"var(--font-playfair)\", \"Playfair Display\", \"serif\"],\n        playfair: [\"var(--font-playfair)\", \"Playfair Display\", \"serif\"],\n        montserrat: [\"var(--font-montserrat)\", \"Montserrat\", \"sans-serif\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        shimmer: {\n          \"0%\": { backgroundPosition: \"-200px 0\" },\n          \"100%\": { backgroundPosition: \"calc(200px + 100%) 0\" },\n        },\n        float: {\n          \"0%, 100%\": { transform: \"translateY(0px)\" },\n          \"50%\": { transform: \"translateY(-10px)\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        shimmer: \"shimmer 2s linear infinite\",\n        float: \"float 3s ease-in-out infinite\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3616},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });","size_bytes":482},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"â¦\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/replitAuth.ts":{"content":"import * as client from \"openid-client\";\nimport { Strategy, type VerifyFunction } from \"openid-client/passport\";\n\nimport passport from \"passport\";\nimport session from \"express-session\";\nimport type { Express, RequestHandler } from \"express\";\nimport memoize from \"memoizee\";\nimport connectPg from \"connect-pg-simple\";\nimport { storage } from \"./storage\";\n\nif (!process.env.REPLIT_DOMAINS) {\n  throw new Error(\"Environment variable REPLIT_DOMAINS not provided\");\n}\n\nconst getOidcConfig = memoize(\n  async () => {\n    return await client.discovery(\n      new URL(process.env.ISSUER_URL ?? \"https://replit.com/oidc\"),\n      process.env.REPL_ID!\n    );\n  },\n  { maxAge: 3600 * 1000 }\n);\n\nexport function getSession() {\n  const sessionTtl = 7 * 24 * 60 * 60 * 1000; // 1 week\n  const pgStore = connectPg(session);\n  const sessionStore = new pgStore({\n    conString: process.env.DATABASE_URL,\n    createTableIfMissing: false,\n    ttl: sessionTtl,\n    tableName: \"sessions\",\n  });\n  return session({\n    secret: process.env.SESSION_SECRET!,\n    store: sessionStore,\n    resave: false,\n    saveUninitialized: false,\n    cookie: {\n      httpOnly: true,\n      secure: true,\n      maxAge: sessionTtl,\n    },\n  });\n}\n\nfunction updateUserSession(\n  user: any,\n  tokens: client.TokenEndpointResponse & client.TokenEndpointResponseHelpers\n) {\n  user.claims = tokens.claims();\n  user.access_token = tokens.access_token;\n  user.refresh_token = tokens.refresh_token;\n  user.expires_at = user.claims?.exp;\n}\n\nasync function upsertUser(\n  claims: any,\n) {\n  await storage.upsertUser({\n    id: claims[\"sub\"],\n    email: claims[\"email\"],\n    firstName: claims[\"first_name\"],\n    lastName: claims[\"last_name\"],\n    profileImageUrl: claims[\"profile_image_url\"],\n  });\n}\n\nexport async function setupAuth(app: Express) {\n  app.set(\"trust proxy\", 1);\n  app.use(getSession());\n  app.use(passport.initialize());\n  app.use(passport.session());\n\n  const config = await getOidcConfig();\n\n  const verify: VerifyFunction = async (\n    tokens: client.TokenEndpointResponse & client.TokenEndpointResponseHelpers,\n    verified: passport.AuthenticateCallback\n  ) => {\n    const user = {};\n    updateUserSession(user, tokens);\n    await upsertUser(tokens.claims());\n    verified(null, user);\n  };\n\n  for (const domain of process.env\n    .REPLIT_DOMAINS!.split(\",\")) {\n    const strategy = new Strategy(\n      {\n        name: `replitauth:${domain}`,\n        config,\n        scope: \"openid email profile offline_access\",\n        callbackURL: `https://${domain}/api/callback`,\n      },\n      verify,\n    );\n    passport.use(strategy);\n  }\n\n  passport.serializeUser((user: Express.User, cb) => cb(null, user));\n  passport.deserializeUser((user: Express.User, cb) => cb(null, user));\n\n  app.get(\"/api/login\", (req, res, next) => {\n    passport.authenticate(`replitauth:${req.hostname}`, {\n      prompt: \"login consent\",\n      scope: [\"openid\", \"email\", \"profile\", \"offline_access\"],\n    })(req, res, next);\n  });\n\n  app.get(\"/api/callback\", (req, res, next) => {\n    passport.authenticate(`replitauth:${req.hostname}`, {\n      successReturnToOrRedirect: \"/\",\n      failureRedirect: \"/api/login\",\n    })(req, res, next);\n  });\n\n  app.get(\"/api/logout\", (req, res) => {\n    req.logout(() => {\n      res.redirect(\n        client.buildEndSessionUrl(config, {\n          client_id: process.env.REPL_ID!,\n          post_logout_redirect_uri: `${req.protocol}://${req.hostname}`,\n        }).href\n      );\n    });\n  });\n}\n\nexport const isAuthenticated: RequestHandler = async (req, res, next) => {\n  const user = req.user as any;\n\n  if (!req.isAuthenticated() || !user.expires_at) {\n    return res.status(401).json({ message: \"Unauthorized\" });\n  }\n\n  const now = Math.floor(Date.now() / 1000);\n  if (now <= user.expires_at) {\n    return next();\n  }\n\n  const refreshToken = user.refresh_token;\n  if (!refreshToken) {\n    res.status(401).json({ message: \"Unauthorized\" });\n    return;\n  }\n\n  try {\n    const config = await getOidcConfig();\n    const tokenResponse = await client.refreshTokenGrant(config, refreshToken);\n    updateUserSession(user, tokenResponse);\n    return next();\n  } catch (error) {\n    res.status(401).json({ message: \"Unauthorized\" });\n    return;\n  }\n};\n","size_bytes":4221},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { setupAuth, isAuthenticated } from \"./replitAuth\";\nimport { \n  insertProductSchema, \n  insertOrderSchema, \n  insertQuoteSchema,\n  insertNewsletterSubscriptionSchema,\n  insertReviewSchema,\n  insertGalleryItemSchema\n} from \"@shared/schema\";\nimport { z } from \"zod\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Auth middleware\n  await setupAuth(app);\n\n  // Auth routes\n  app.get('/api/auth/user', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const user = await storage.getUser(userId);\n      res.json(user);\n    } catch (error) {\n      console.error(\"Error fetching user:\", error);\n      res.status(500).json({ message: \"Failed to fetch user\" });\n    }\n  });\n\n  // Product routes\n  app.get('/api/products', async (req, res) => {\n    try {\n      const { category } = req.query;\n      const products = category \n        ? await storage.getProductsByCategory(category as string)\n        : await storage.getProducts();\n      res.json(products);\n    } catch (error) {\n      console.error(\"Error fetching products:\", error);\n      res.status(500).json({ message: \"Failed to fetch products\" });\n    }\n  });\n\n  app.get('/api/products/:id', async (req, res) => {\n    try {\n      const product = await storage.getProduct(req.params.id);\n      if (!product) {\n        return res.status(404).json({ message: \"Product not found\" });\n      }\n      res.json(product);\n    } catch (error) {\n      console.error(\"Error fetching product:\", error);\n      res.status(500).json({ message: \"Failed to fetch product\" });\n    }\n  });\n\n  app.post('/api/products', isAuthenticated, async (req: any, res) => {\n    try {\n      // Check if user is admin\n      const user = await storage.getUser(req.user.claims.sub);\n      if (user?.role !== 'admin') {\n        return res.status(403).json({ message: \"Admin access required\" });\n      }\n\n      const productData = insertProductSchema.parse(req.body);\n      const product = await storage.createProduct(productData);\n      res.status(201).json(product);\n    } catch (error) {\n      console.error(\"Error creating product:\", error);\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid product data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to create product\" });\n    }\n  });\n\n  // Order routes\n  app.get('/api/orders', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const user = await storage.getUser(userId);\n      \n      // Admin can see all orders, users only their own\n      const orders = user?.role === 'admin' \n        ? await storage.getOrders()\n        : await storage.getOrders(userId);\n      \n      res.json(orders);\n    } catch (error) {\n      console.error(\"Error fetching orders:\", error);\n      res.status(500).json({ message: \"Failed to fetch orders\" });\n    }\n  });\n\n  app.post('/api/orders', async (req, res) => {\n    try {\n      const orderData = insertOrderSchema.parse(req.body);\n      const order = await storage.createOrder(orderData);\n      \n      // Add order items if provided\n      if (req.body.items && Array.isArray(req.body.items)) {\n        for (const item of req.body.items) {\n          await storage.addOrderItem({\n            ...item,\n            orderId: order.id,\n          });\n        }\n      }\n\n      res.status(201).json(order);\n    } catch (error) {\n      console.error(\"Error creating order:\", error);\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid order data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to create order\" });\n    }\n  });\n\n  // Rental availability check\n  app.get('/api/rentals/availability/:productId', async (req, res) => {\n    try {\n      const { productId } = req.params;\n      const { startDate, endDate } = req.query;\n\n      if (!startDate || !endDate) {\n        return res.status(400).json({ message: \"Start date and end date are required\" });\n      }\n\n      const start = new Date(startDate as string);\n      const end = new Date(endDate as string);\n\n      const isAvailable = await storage.getRentalAvailability(productId, start, end);\n      res.json({ available: isAvailable });\n    } catch (error) {\n      console.error(\"Error checking availability:\", error);\n      res.status(500).json({ message: \"Failed to check availability\" });\n    }\n  });\n\n  // Quote routes\n  app.post('/api/quotes', async (req, res) => {\n    try {\n      const quoteData = insertQuoteSchema.parse(req.body);\n      const quote = await storage.createQuote(quoteData);\n      res.status(201).json(quote);\n    } catch (error) {\n      console.error(\"Error creating quote:\", error);\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid quote data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to create quote\" });\n    }\n  });\n\n  app.get('/api/quotes', isAuthenticated, async (req: any, res) => {\n    try {\n      const user = await storage.getUser(req.user.claims.sub);\n      if (user?.role !== 'admin') {\n        return res.status(403).json({ message: \"Admin access required\" });\n      }\n\n      const quotes = await storage.getQuotes();\n      res.json(quotes);\n    } catch (error) {\n      console.error(\"Error fetching quotes:\", error);\n      res.status(500).json({ message: \"Failed to fetch quotes\" });\n    }\n  });\n\n  // Payment routes (placeholder for future integration)\n  app.post(\"/api/create-payment-intent\", async (req, res) => {\n    res.status(501).json({ \n      message: \"Payment system not implemented yet\",\n      info: \"Payment integration will be added in a future version\"\n    });\n  });\n\n  // Newsletter routes\n  app.post('/api/newsletter/subscribe', async (req, res) => {\n    try {\n      const subscriptionData = insertNewsletterSubscriptionSchema.parse(req.body);\n      const subscription = await storage.subscribeToNewsletter(subscriptionData);\n      res.status(201).json(subscription);\n    } catch (error) {\n      console.error(\"Error subscribing to newsletter:\", error);\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid subscription data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to subscribe to newsletter\" });\n    }\n  });\n\n  app.get('/api/newsletter', isAuthenticated, async (req: any, res) => {\n    try {\n      const user = await storage.getUser(req.user.claims.sub);\n      if (user?.role !== 'admin') {\n        return res.status(403).json({ message: \"Admin access required\" });\n      }\n      const subscriptions = await storage.getNewsletterSubscriptions();\n      res.json(subscriptions);\n    } catch (error) {\n      console.error(\"Error fetching newsletter subscriptions:\", error);\n      res.status(500).json({ message: \"Failed to fetch newsletter subscriptions\" });\n    }\n  });\n\n  // Review routes\n  app.get('/api/reviews', async (req, res) => {\n    try {\n      const reviews = await storage.getPublishedReviews();\n      res.json(reviews);\n    } catch (error) {\n      console.error(\"Error fetching reviews:\", error);\n      res.status(500).json({ message: \"Failed to fetch reviews\" });\n    }\n  });\n\n  app.post('/api/reviews', async (req, res) => {\n    try {\n      const reviewData = insertReviewSchema.parse(req.body);\n      const review = await storage.createReview(reviewData);\n      res.status(201).json(review);\n    } catch (error) {\n      console.error(\"Error creating review:\", error);\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid review data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to create review\" });\n    }\n  });\n\n  // Gallery routes\n  app.get('/api/gallery', async (req, res) => {\n    try {\n      const { category } = req.query;\n      const items = await storage.getPublishedGalleryItems(category as string);\n      res.json(items);\n    } catch (error) {\n      console.error(\"Error fetching gallery items:\", error);\n      res.status(500).json({ message: \"Failed to fetch gallery items\" });\n    }\n  });\n\n  app.post('/api/gallery', isAuthenticated, async (req: any, res) => {\n    try {\n      const user = await storage.getUser(req.user.claims.sub);\n      if (user?.role !== 'admin') {\n        return res.status(403).json({ message: \"Admin access required\" });\n      }\n      const itemData = insertGalleryItemSchema.parse(req.body);\n      const item = await storage.createGalleryItem(itemData);\n      res.status(201).json(item);\n    } catch (error) {\n      console.error(\"Error creating gallery item:\", error);\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid gallery item data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to create gallery item\" });\n    }\n  });\n\n  // Webhook placeholder for future payment integration\n  app.post('/api/payment-webhook', async (req, res) => {\n    res.status(501).json({ \n      message: \"Payment webhook not implemented yet\",\n      info: \"Webhook will be configured when payment system is integrated\"\n    });\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":9381},"server/storage.ts":{"content":"import {\n  users,\n  products,\n  orders,\n  orderItems,\n  rentals,\n  quotes,\n  newsletterSubscriptions,\n  reviews,\n  galleryItems,\n  type User,\n  type UpsertUser,\n  type Product,\n  type InsertProduct,\n  type Order,\n  type InsertOrder,\n  type OrderItem,\n  type InsertOrderItem,\n  type Rental,\n  type Quote,\n  type InsertQuote,\n  type NewsletterSubscription,\n  type InsertNewsletterSubscription,\n  type Review,\n  type InsertReview,\n  type GalleryItem,\n  type InsertGalleryItem\n} from \"@shared/schema\";\nimport { db } from \"./db\";\nimport { eq, and, gte, lte, desc, asc } from \"drizzle-orm\";\n\nexport interface IStorage {\n  // User operations (required for Replit Auth)\n  getUser(id: string): Promise<User | undefined>;\n  upsertUser(user: UpsertUser & { id: string }): Promise<User>;\n  updateUserStripeInfo(userId: string, stripeCustomerId: string, stripeSubscriptionId?: string): Promise<User>;\n\n  // Product operations\n  getProducts(): Promise<Product[]>;\n  getProductsByCategory(category: string): Promise<Product[]>;\n  getProduct(id: string): Promise<Product | undefined>;\n  createProduct(product: InsertProduct): Promise<Product>;\n  updateProduct(id: string, updates: Partial<InsertProduct>): Promise<Product>;\n  deleteProduct(id: string): Promise<void>;\n\n  // Order operations\n  getOrders(userId?: string): Promise<Order[]>;\n  getOrder(id: string): Promise<Order | undefined>;\n  createOrder(order: InsertOrder): Promise<Order>;\n  updateOrderStatus(id: string, status: string): Promise<Order>;\n  getOrderItems(orderId: string): Promise<OrderItem[]>;\n  addOrderItem(item: InsertOrderItem): Promise<OrderItem>;\n\n  // Rental operations\n  getRentalAvailability(productId: string, startDate: Date, endDate: Date): Promise<boolean>;\n  createRental(rental: { productId: string; orderId: string; startDate: Date; endDate: Date }): Promise<Rental>;\n  getActiveRentals(): Promise<Rental[]>;\n\n  // Quote operations\n  getQuotes(): Promise<Quote[]>;\n  createQuote(quote: InsertQuote): Promise<Quote>;\n  updateQuoteStatus(id: string, status: string, estimatedPrice?: number): Promise<Quote>;\n\n  // Newsletter operations\n  subscribeToNewsletter(subscription: InsertNewsletterSubscription): Promise<NewsletterSubscription>;\n  getNewsletterSubscriptions(): Promise<NewsletterSubscription[]>;\n  \n  // Review operations\n  getReviews(): Promise<Review[]>;\n  getPublishedReviews(): Promise<Review[]>;\n  createReview(review: InsertReview): Promise<Review>;\n  updateReviewStatus(id: string, isPublished: boolean): Promise<Review>;\n  \n  // Gallery operations\n  getGalleryItems(category?: string): Promise<GalleryItem[]>;\n  getPublishedGalleryItems(category?: string): Promise<GalleryItem[]>;\n  createGalleryItem(item: InsertGalleryItem): Promise<GalleryItem>;\n  updateGalleryItem(id: string, updates: Partial<InsertGalleryItem>): Promise<GalleryItem>;\n  deleteGalleryItem(id: string): Promise<void>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  // User operations\n  async getUser(id: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user;\n  }\n\n  async upsertUser(userData: UpsertUser & { id: string }): Promise<User> {\n    const [user] = await db\n      .insert(users)\n      .values(userData)\n      .onConflictDoUpdate({\n        target: users.id,\n        set: {\n          ...userData,\n          updatedAt: new Date(),\n        },\n      })\n      .returning();\n    return user;\n  }\n\n  async updateUserStripeInfo(userId: string, stripeCustomerId: string, stripeSubscriptionId?: string): Promise<User> {\n    const [user] = await db\n      .update(users)\n      .set({\n        stripeCustomerId,\n        stripeSubscriptionId,\n        updatedAt: new Date(),\n      })\n      .where(eq(users.id, userId))\n      .returning();\n    return user;\n  }\n\n  // Product operations\n  async getProducts(): Promise<Product[]> {\n    return await db.select().from(products).orderBy(asc(products.name));\n  }\n\n  async getProductsByCategory(category: string): Promise<Product[]> {\n    return await db.select().from(products).where(eq(products.category, category)).orderBy(asc(products.name));\n  }\n\n  async getProduct(id: string): Promise<Product | undefined> {\n    const [product] = await db.select().from(products).where(eq(products.id, id));\n    return product;\n  }\n\n  async createProduct(product: InsertProduct): Promise<Product> {\n    const [newProduct] = await db.insert(products).values(product).returning();\n    return newProduct;\n  }\n\n  async updateProduct(id: string, updates: Partial<InsertProduct>): Promise<Product> {\n    const [product] = await db\n      .update(products)\n      .set({ ...updates, updatedAt: new Date() })\n      .where(eq(products.id, id))\n      .returning();\n    return product;\n  }\n\n  async deleteProduct(id: string): Promise<void> {\n    await db.delete(products).where(eq(products.id, id));\n  }\n\n  // Order operations\n  async getOrders(userId?: string): Promise<Order[]> {\n    if (userId) {\n      return await db.select().from(orders).where(eq(orders.userId, userId)).orderBy(desc(orders.createdAt));\n    }\n    return await db.select().from(orders).orderBy(desc(orders.createdAt));\n  }\n\n  async getOrder(id: string): Promise<Order | undefined> {\n    const [order] = await db.select().from(orders).where(eq(orders.id, id));\n    return order;\n  }\n\n  async createOrder(order: InsertOrder): Promise<Order> {\n    const [newOrder] = await db.insert(orders).values(order).returning();\n    return newOrder;\n  }\n\n  async updateOrderStatus(id: string, status: string): Promise<Order> {\n    const [order] = await db\n      .update(orders)\n      .set({ status, updatedAt: new Date() })\n      .where(eq(orders.id, id))\n      .returning();\n    return order;\n  }\n\n  async getOrderItems(orderId: string): Promise<OrderItem[]> {\n    return await db.select().from(orderItems).where(eq(orderItems.orderId, orderId));\n  }\n\n  async addOrderItem(item: InsertOrderItem): Promise<OrderItem> {\n    const [orderItem] = await db.insert(orderItems).values(item).returning();\n    return orderItem;\n  }\n\n  // Rental operations\n  async getRentalAvailability(productId: string, startDate: Date, endDate: Date): Promise<boolean> {\n    const conflictingRentals = await db\n      .select()\n      .from(rentals)\n      .where(\n        and(\n          eq(rentals.productId, productId),\n          eq(rentals.status, 'active'),\n          // Check for overlapping dates\n          and(\n            lte(rentals.startDate, endDate),\n            gte(rentals.endDate, startDate)\n          )\n        )\n      );\n    \n    return conflictingRentals.length === 0;\n  }\n\n  async createRental(rental: { productId: string; orderId: string; startDate: Date; endDate: Date }): Promise<Rental> {\n    const [newRental] = await db.insert(rentals).values(rental).returning();\n    return newRental;\n  }\n\n  async getActiveRentals(): Promise<Rental[]> {\n    return await db.select().from(rentals).where(eq(rentals.status, 'active')).orderBy(asc(rentals.startDate));\n  }\n\n  // Quote operations\n  async getQuotes(): Promise<Quote[]> {\n    return await db.select().from(quotes).orderBy(desc(quotes.createdAt));\n  }\n\n  async createQuote(quote: InsertQuote): Promise<Quote> {\n    const [newQuote] = await db.insert(quotes).values(quote).returning();\n    return newQuote;\n  }\n\n  async updateQuoteStatus(id: string, status: string, estimatedPrice?: number): Promise<Quote> {\n    const updates: any = { status, updatedAt: new Date() };\n    if (estimatedPrice !== undefined) {\n      updates.estimatedPrice = estimatedPrice.toString();\n    }\n\n    const [quote] = await db\n      .update(quotes)\n      .set(updates)\n      .where(eq(quotes.id, id))\n      .returning();\n    return quote;\n  }\n\n  // Newsletter operations\n  async subscribeToNewsletter(subscription: InsertNewsletterSubscription): Promise<NewsletterSubscription> {\n    const [newSubscription] = await db.insert(newsletterSubscriptions).values(subscription).returning();\n    return newSubscription;\n  }\n\n  async getNewsletterSubscriptions(): Promise<NewsletterSubscription[]> {\n    return await db.select().from(newsletterSubscriptions).where(eq(newsletterSubscriptions.isActive, true)).orderBy(desc(newsletterSubscriptions.createdAt));\n  }\n\n  // Review operations\n  async getReviews(): Promise<Review[]> {\n    return await db.select().from(reviews).orderBy(desc(reviews.createdAt));\n  }\n\n  async getPublishedReviews(): Promise<Review[]> {\n    return await db.select().from(reviews).where(eq(reviews.isPublished, true)).orderBy(desc(reviews.createdAt));\n  }\n\n  async createReview(review: InsertReview): Promise<Review> {\n    const [newReview] = await db.insert(reviews).values(review).returning();\n    return newReview;\n  }\n\n  async updateReviewStatus(id: string, isPublished: boolean): Promise<Review> {\n    const [review] = await db\n      .update(reviews)\n      .set({ isPublished })\n      .where(eq(reviews.id, id))\n      .returning();\n    return review;\n  }\n\n  // Gallery operations\n  async getGalleryItems(category?: string): Promise<GalleryItem[]> {\n    if (category) {\n      return await db.select().from(galleryItems).where(eq(galleryItems.category, category)).orderBy(desc(galleryItems.orderIndex));\n    }\n    return await db.select().from(galleryItems).orderBy(desc(galleryItems.orderIndex));\n  }\n\n  async getPublishedGalleryItems(category?: string): Promise<GalleryItem[]> {\n    if (category) {\n      return await db.select().from(galleryItems)\n        .where(and(eq(galleryItems.isPublished, true), eq(galleryItems.category, category)))\n        .orderBy(desc(galleryItems.orderIndex));\n    }\n    return await db.select().from(galleryItems)\n      .where(eq(galleryItems.isPublished, true))\n      .orderBy(desc(galleryItems.orderIndex));\n  }\n\n  async createGalleryItem(item: InsertGalleryItem): Promise<GalleryItem> {\n    const [newItem] = await db.insert(galleryItems).values(item).returning();\n    return newItem;\n  }\n\n  async updateGalleryItem(id: string, updates: Partial<InsertGalleryItem>): Promise<GalleryItem> {\n    const [item] = await db\n      .update(galleryItems)\n      .set(updates)\n      .where(eq(galleryItems.id, id))\n      .returning();\n    return item;\n  }\n\n  async deleteGalleryItem(id: string): Promise<void> {\n    await db.delete(galleryItems).where(eq(galleryItems.id, id));\n  }\n}\n\nexport const storage = new DatabaseStorage();\n","size_bytes":10299},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from 'drizzle-orm';\nimport {\n  index,\n  jsonb,\n  pgTable,\n  timestamp,\n  varchar,\n  text,\n  integer,\n  decimal,\n  boolean,\n  uuid\n} from \"drizzle-orm/pg-core\";\nimport { relations } from \"drizzle-orm\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Session storage table for Replit Auth\nexport const sessions = pgTable(\n  \"sessions\",\n  {\n    sid: varchar(\"sid\").primaryKey(),\n    sess: jsonb(\"sess\").notNull(),\n    expire: timestamp(\"expire\").notNull(),\n  },\n  (table) => [index(\"IDX_session_expire\").on(table.expire)],\n);\n\n// User storage table for Replit Auth\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey(),\n  email: varchar(\"email\").unique(),\n  firstName: varchar(\"first_name\"),\n  lastName: varchar(\"last_name\"),\n  profileImageUrl: varchar(\"profile_image_url\"),\n  stripeCustomerId: varchar(\"stripe_customer_id\"),\n  stripeSubscriptionId: varchar(\"stripe_subscription_id\"),\n  role: varchar(\"role\").default(\"user\"), // user, admin\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Products table\nexport const products = pgTable(\"products\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: varchar(\"name\").notNull(),\n  description: text(\"description\"),\n  price: decimal(\"price\", { precision: 10, scale: 2 }).notNull(),\n  category: varchar(\"category\").notNull(), // shop, crea, rent, events, home, co\n  subcategory: varchar(\"subcategory\"),\n  imageUrl: varchar(\"image_url\"),\n  isCustomizable: boolean(\"is_customizable\").default(false),\n  isRentable: boolean(\"is_rentable\").default(false),\n  stockQuantity: integer(\"stock_quantity\").default(0),\n  dailyRentalPrice: decimal(\"daily_rental_price\", { precision: 10, scale: 2 }),\n  customizationOptions: jsonb(\"customization_options\"), // colors, sizes, text options\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Orders table\nexport const orders = pgTable(\"orders\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id),\n  customerEmail: varchar(\"customer_email\").notNull(),\n  customerName: varchar(\"customer_name\").notNull(),\n  customerPhone: varchar(\"customer_phone\"),\n  total: decimal(\"total\", { precision: 10, scale: 2 }).notNull(),\n  status: varchar(\"status\").default(\"pending\"), // pending, confirmed, processing, shipped, delivered, cancelled\n  orderType: varchar(\"order_type\").notNull(), // purchase, rental, service\n  eventDate: timestamp(\"event_date\"),\n  notes: text(\"notes\"),\n  stripePaymentIntentId: varchar(\"stripe_payment_intent_id\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Order items table\nexport const orderItems = pgTable(\"order_items\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  orderId: varchar(\"order_id\").references(() => orders.id, { onDelete: \"cascade\" }),\n  productId: varchar(\"product_id\").references(() => products.id),\n  quantity: integer(\"quantity\").notNull(),\n  unitPrice: decimal(\"unit_price\", { precision: 10, scale: 2 }).notNull(),\n  customization: jsonb(\"customization\"), // selected customization options\n  rentalStartDate: timestamp(\"rental_start_date\"),\n  rentalEndDate: timestamp(\"rental_end_date\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Rentals table for tracking rental availability\nexport const rentals = pgTable(\"rentals\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  productId: varchar(\"product_id\").references(() => products.id),\n  orderId: varchar(\"order_id\").references(() => orders.id),\n  startDate: timestamp(\"start_date\").notNull(),\n  endDate: timestamp(\"end_date\").notNull(),\n  status: varchar(\"status\").default(\"active\"), // active, returned, overdue\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Quotes table for service requests\nexport const quotes = pgTable(\"quotes\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  customerName: varchar(\"customer_name\").notNull(),\n  customerEmail: varchar(\"customer_email\").notNull(),\n  customerPhone: varchar(\"customer_phone\"),\n  serviceType: varchar(\"service_type\").notNull(), // events, home, co\n  eventDate: timestamp(\"event_date\"),\n  budget: varchar(\"budget\"),\n  description: text(\"description\").notNull(),\n  status: varchar(\"status\").default(\"pending\"), // pending, reviewed, quoted, accepted, declined\n  estimatedPrice: decimal(\"estimated_price\", { precision: 10, scale: 2 }),\n  notes: text(\"notes\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Newsletter subscriptions table\nexport const newsletterSubscriptions = pgTable(\"newsletter_subscriptions\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: varchar(\"email\").unique().notNull(),\n  name: varchar(\"name\"),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Reviews table for customer testimonials\nexport const reviews = pgTable(\"reviews\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  customerName: varchar(\"customer_name\").notNull(),\n  customerEmail: varchar(\"customer_email\"),\n  rating: integer(\"rating\").notNull(), // 1-5 stars\n  comment: text(\"comment\").notNull(),\n  serviceType: varchar(\"service_type\"), // events, home, shop, rent, crea, co\n  orderId: varchar(\"order_id\").references(() => orders.id),\n  isPublished: boolean(\"is_published\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Gallery table for showcasing work (like Instagram feed)\nexport const galleryItems = pgTable(\"gallery_items\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: varchar(\"title\").notNull(),\n  description: text(\"description\"),\n  imageUrl: varchar(\"image_url\").notNull(),\n  category: varchar(\"category\").notNull(), // events, home, shop, rent, crea, co\n  tags: jsonb(\"tags\"), // array of tags\n  isPublished: boolean(\"is_published\").default(true),\n  orderIndex: integer(\"order_index\").default(0),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Relations\nexport const usersRelations = relations(users, ({ many }) => ({\n  orders: many(orders),\n}));\n\nexport const ordersRelations = relations(orders, ({ one, many }) => ({\n  user: one(users, {\n    fields: [orders.userId],\n    references: [users.id],\n  }),\n  items: many(orderItems),\n}));\n\nexport const orderItemsRelations = relations(orderItems, ({ one }) => ({\n  order: one(orders, {\n    fields: [orderItems.orderId],\n    references: [orders.id],\n  }),\n  product: one(products, {\n    fields: [orderItems.productId],\n    references: [products.id],\n  }),\n}));\n\nexport const productsRelations = relations(products, ({ many }) => ({\n  orderItems: many(orderItems),\n  rentals: many(rentals),\n}));\n\nexport const rentalsRelations = relations(rentals, ({ one }) => ({\n  product: one(products, {\n    fields: [rentals.productId],\n    references: [products.id],\n  }),\n  order: one(orders, {\n    fields: [rentals.orderId],\n    references: [orders.id],\n  }),\n}));\n\n// Zod schemas\nexport const insertUserSchema = createInsertSchema(users).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertProductSchema = createInsertSchema(products).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertOrderSchema = createInsertSchema(orders).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertOrderItemSchema = createInsertSchema(orderItems).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertQuoteSchema = createInsertSchema(quotes).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertNewsletterSubscriptionSchema = createInsertSchema(newsletterSubscriptions).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertReviewSchema = createInsertSchema(reviews).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertGalleryItemSchema = createInsertSchema(galleryItems).omit({\n  id: true,\n  createdAt: true,\n});\n\n// Types\nexport type UpsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type Product = typeof products.$inferSelect;\nexport type InsertProduct = z.infer<typeof insertProductSchema>;\nexport type Order = typeof orders.$inferSelect;\nexport type InsertOrder = z.infer<typeof insertOrderSchema>;\nexport type OrderItem = typeof orderItems.$inferSelect;\nexport type InsertOrderItem = z.infer<typeof insertOrderItemSchema>;\nexport type Rental = typeof rentals.$inferSelect;\nexport type Quote = typeof quotes.$inferSelect;\nexport type InsertQuote = z.infer<typeof insertQuoteSchema>;\nexport type NewsletterSubscription = typeof newsletterSubscriptions.$inferSelect;\nexport type InsertNewsletterSubscription = z.infer<typeof insertNewsletterSubscriptionSchema>;\nexport type Review = typeof reviews.$inferSelect;\nexport type InsertReview = z.infer<typeof insertReviewSchema>;\nexport type GalleryItem = typeof galleryItems.$inferSelect;\nexport type InsertGalleryItem = z.infer<typeof insertGalleryItemSchema>;\n","size_bytes":9213},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport NotFound from \"@/pages/not-found\";\nimport Landing from \"@/pages/Landing\";\nimport Home from \"@/pages/Home\";\nimport Shop from \"@/pages/Shop\";\nimport Crea from \"@/pages/Crea\";\nimport Rent from \"@/pages/Rent\";\nimport Events from \"@/pages/Events\";\nimport SKDHome from \"@/pages/SKDHome\";\nimport Co from \"@/pages/Co\";\nimport Checkout from \"@/pages/Checkout\";\nimport Contact from \"@/pages/Contact\";\nimport About from \"@/pages/About\";\n\nfunction Router() {\n  const { isAuthenticated, isLoading } = useAuth();\n\n  // Don't wait for authentication - show content immediately\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/shop\" component={Shop} />\n      <Route path=\"/crea\" component={Crea} />\n      <Route path=\"/rent\" component={Rent} />\n      <Route path=\"/events\" component={Events} />\n      <Route path=\"/home\" component={SKDHome} />\n      <Route path=\"/co\" component={Co} />\n      <Route path=\"/checkout\" component={Checkout} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route path=\"/about\" component={About} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1648},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400;0,500;0,600;0,700;1,400&family=Montserrat:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(240, 10%, 3.9%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(240, 10%, 3.9%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(240, 10%, 3.9%);\n  --primary: hsl(48, 65%, 65%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(240, 4.8%, 95.9%);\n  --secondary-foreground: hsl(240, 5.9%, 10%);\n  --muted: hsl(240, 4.8%, 95.9%);\n  --muted-foreground: hsl(240, 3.8%, 46.1%);\n  --accent: hsl(240, 4.8%, 95.9%);\n  --accent-foreground: hsl(240, 5.9%, 10%);\n  --destructive: hsl(0, 84.2%, 60.2%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --border: hsl(240, 5.9%, 90%);\n  --input: hsl(240, 5.9%, 90%);\n  --ring: hsl(48, 65%, 65%);\n  --chart-1: hsl(12, 76%, 61%);\n  --chart-2: hsl(173, 58%, 39%);\n  --chart-3: hsl(197, 37%, 24%);\n  --chart-4: hsl(43, 74%, 66%);\n  --chart-5: hsl(27, 87%, 67%);\n  --radius: 0.5rem;\n  \n  /* SKD Brand Colors */\n  --gold: hsl(48, 65%, 65%);\n  --skd-shop: hsl(331, 66%, 85%);\n  --skd-crea: hsl(286, 45%, 80%);\n  --skd-rent: hsl(177, 25%, 75%);\n  --skd-events: hsl(54, 100%, 89%);\n  --skd-home: hsl(28, 100%, 87%);\n  --skd-co: hsl(207, 89%, 86%);\n  \n  /* Typography */\n  --font-playfair: 'Playfair Display', serif;\n  --font-montserrat: 'Montserrat', sans-serif;\n}\n\n.dark {\n  --background: hsl(240, 10%, 3.9%);\n  --foreground: hsl(0, 0%, 98%);\n  --card: hsl(240, 10%, 3.9%);\n  --card-foreground: hsl(0, 0%, 98%);\n  --popover: hsl(240, 10%, 3.9%);\n  --popover-foreground: hsl(0, 0%, 98%);\n  --primary: hsl(48, 65%, 65%);\n  --primary-foreground: hsl(240, 5.9%, 10%);\n  --secondary: hsl(240, 3.7%, 15.9%);\n  --secondary-foreground: hsl(0, 0%, 98%);\n  --muted: hsl(240, 3.7%, 15.9%);\n  --muted-foreground: hsl(240, 5%, 64.9%);\n  --accent: hsl(240, 3.7%, 15.9%);\n  --accent-foreground: hsl(0, 0%, 98%);\n  --destructive: hsl(0, 62.8%, 30.6%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --border: hsl(240, 3.7%, 15.9%);\n  --input: hsl(240, 3.7%, 15.9%);\n  --ring: hsl(48, 65%, 65%);\n  --chart-1: hsl(220, 70%, 50%);\n  --chart-2: hsl(160, 60%, 45%);\n  --chart-3: hsl(30, 80%, 55%);\n  --chart-4: hsl(280, 65%, 60%);\n  --chart-5: hsl(340, 75%, 55%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  \n  body {\n    @apply bg-background text-foreground font-montserrat antialiased;\n  }\n  \n  h1, h2, h3, h4, h5, h6 {\n    @apply font-playfair;\n  }\n}\n\n@layer utilities {\n  .metallic-gold {\n    background: linear-gradient(135deg, #E1C16E 0%, #D4AF5C 50%, #F4D675 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n  }\n  \n  .shimmer {\n    background: linear-gradient(90deg, transparent, rgba(225, 193, 110, 0.4), transparent);\n    background-size: 200px 100%;\n    animation: shimmer 2s infinite;\n  }\n  \n  .text-gold {\n    color: hsl(var(--gold));\n  }\n  \n  .bg-gold {\n    background-color: hsl(var(--gold));\n  }\n  \n  .border-gold {\n    border-color: hsl(var(--gold));\n  }\n  \n  .text-skd-shop {\n    color: hsl(var(--skd-shop));\n  }\n  \n  .bg-skd-shop {\n    background-color: hsl(var(--skd-shop));\n  }\n  \n  .text-skd-crea {\n    color: hsl(var(--skd-crea));\n  }\n  \n  .bg-skd-crea {\n    background-color: hsl(var(--skd-crea));\n  }\n  \n  .text-skd-rent {\n    color: hsl(var(--skd-rent));\n  }\n  \n  .bg-skd-rent {\n    background-color: hsl(var(--skd-rent));\n  }\n  \n  .text-skd-events {\n    color: hsl(var(--skd-events));\n  }\n  \n  .bg-skd-events {\n    background-color: hsl(var(--skd-events));\n  }\n  \n  .text-skd-home {\n    color: hsl(var(--skd-home));\n  }\n  \n  .bg-skd-home {\n    background-color: hsl(var(--skd-home));\n  }\n  \n  .text-skd-co {\n    color: hsl(var(--skd-co));\n  }\n  \n  .bg-skd-co {\n    background-color: hsl(var(--skd-co));\n  }\n}\n\n@keyframes shimmer {\n  0% { \n    background-position: -200px 0; \n  }\n  100% { \n    background-position: calc(200px + 100%) 0; \n  }\n}\n\n@keyframes float {\n  0%, 100% { \n    transform: translateY(0px); \n  }\n  50% { \n    transform: translateY(-10px); \n  }\n}\n\n.animate-float {\n  animation: float 3s ease-in-out infinite;\n}\n\n/* Additional utility classes */\n.line-clamp-2 {\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n.line-clamp-3 {\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n/* Enhanced gradient backgrounds */\n.gradient-gold {\n  background: linear-gradient(135deg, #FFD700 0%, #FFA500 50%, #FF8C00 100%);\n}\n\n.gradient-pink {\n  background: linear-gradient(135deg, #FF69B4 0%, #FF1493 50%, #DC143C 100%);\n}\n\n/* Service-specific hover effects */\n.hover-lift {\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.hover-lift:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);\n}\n\n/* Glassmorphism effect */\n.glass-card {\n  background: rgba(255, 255, 255, 0.9);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.dark .glass-card {\n  background: rgba(0, 0, 0, 0.4);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n/* Custom scrollbar */\n::-webkit-scrollbar {\n  width: 8px;\n}\n\n::-webkit-scrollbar-track {\n  background: #f1f1f1;\n}\n\n::-webkit-scrollbar-thumb {\n  background: hsl(var(--gold));\n  border-radius: 4px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: hsl(var(--gold) / 0.8);\n}\n","size_bytes":5543},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/ContactForm.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\nimport { CalendarIcon } from \"lucide-react\";\nimport { format } from \"date-fns\";\nimport { fr } from \"date-fns/locale\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\ninterface ContactFormProps {\n  serviceType: \"events\" | \"home\" | \"co\";\n}\n\ninterface QuoteData {\n  customerName: string;\n  customerEmail: string;\n  customerPhone: string;\n  serviceType: string;\n  eventDate: Date | undefined;\n  budget: string;\n  description: string;\n}\n\nconst budgetOptions = [\n  { value: \"0-500\", label: \"Moins de 500â¬\" },\n  { value: \"500-1000\", label: \"500â¬ - 1000â¬\" },\n  { value: \"1000-2500\", label: \"1000â¬ - 2500â¬\" },\n  { value: \"2500-5000\", label: \"2500â¬ - 5000â¬\" },\n  { value: \"5000+\", label: \"Plus de 5000â¬\" },\n  { value: \"flexible\", label: \"Budget flexible\" },\n];\n\nexport default function ContactForm({ serviceType }: ContactFormProps) {\n  const { toast } = useToast();\n  const [quote, setQuote] = useState<QuoteData>({\n    customerName: \"\",\n    customerEmail: \"\",\n    customerPhone: \"\",\n    serviceType: serviceType,\n    eventDate: undefined,\n    budget: \"\",\n    description: \"\",\n  });\n\n  const createQuoteMutation = useMutation({\n    mutationFn: async () => {\n      const quoteData = {\n        ...quote,\n        eventDate: quote.eventDate?.toISOString(),\n      };\n      return await apiRequest(\"POST\", \"/api/quotes\", quoteData);\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Demande envoyÃ©e\",\n        description: \"Nous avons bien reÃ§u votre demande. Nous vous recontactons dans les plus brefs dÃ©lais.\",\n      });\n      // Reset form\n      setQuote({\n        customerName: \"\",\n        customerEmail: \"\",\n        customerPhone: \"\",\n        serviceType: serviceType,\n        eventDate: undefined,\n        budget: \"\",\n        description: \"\",\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Erreur\",\n        description: error.message || \"Impossible d'envoyer votre demande\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleInputChange = (field: keyof QuoteData, value: any) => {\n    setQuote(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const isFormValid = () => {\n    return quote.customerName && \n           quote.customerEmail && \n           quote.description;\n  };\n\n  const getServiceLabel = () => {\n    switch (serviceType) {\n      case \"events\":\n        return \"DÃ©coration d'Ã©vÃ©nements\";\n      case \"home\":\n        return \"DÃ©coration intÃ©rieure & Home organizing\";\n      case \"co\":\n        return \"Organisation d'Ã©vÃ©nements\";\n      default:\n        return \"Service\";\n    }\n  };\n\n  const getPlaceholderText = () => {\n    switch (serviceType) {\n      case \"events\":\n        return \"DÃ©crivez votre Ã©vÃ©nement : type de cÃ©lÃ©bration, nombre d'invitÃ©s, style souhaitÃ©, couleurs prÃ©fÃ©rÃ©es, Ã©lÃ©ments spÃ©cifiques...\";\n      case \"home\":\n        return \"DÃ©crivez votre projet : piÃ¨ces Ã  organiser/dÃ©corer, problÃ©matiques actuelles, style souhaitÃ©, budget disponible...\";\n      case \"co\":\n        return \"DÃ©crivez votre Ã©vÃ©nement : type, date souhaitÃ©e, nombre d'invitÃ©s, lieu, besoins spÃ©cifiques, niveau d'accompagnement souhaitÃ©...\";\n      default:\n        return \"DÃ©crivez votre projet...\";\n    }\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardContent className=\"p-8\">\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          if (isFormValid()) {\n            createQuoteMutation.mutate();\n          }\n        }} className=\"space-y-6\">\n          \n          {/* Service Type Display */}\n          <div className=\"text-center p-4 bg-gray-50 rounded-lg\">\n            <h3 className=\"font-semibold text-gray-800\">Demande de devis</h3>\n            <p className=\"text-sm text-gray-600\">{getServiceLabel()}</p>\n          </div>\n\n          {/* Personal Information */}\n          <div className=\"grid md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"name\">Nom complet *</Label>\n              <Input\n                id=\"name\"\n                value={quote.customerName}\n                onChange={(e) => handleInputChange(\"customerName\", e.target.value)}\n                placeholder=\"Votre nom\"\n                required\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"email\">Email *</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                value={quote.customerEmail}\n                onChange={(e) => handleInputChange(\"customerEmail\", e.target.value)}\n                placeholder=\"votre@email.com\"\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"phone\">TÃ©lÃ©phone</Label>\n            <Input\n              id=\"phone\"\n              value={quote.customerPhone}\n              onChange={(e) => handleInputChange(\"customerPhone\", e.target.value)}\n              placeholder=\"06 XX XX XX XX\"\n            />\n          </div>\n\n          {/* Event Date (for events and co services) */}\n          {(serviceType === \"events\" || serviceType === \"co\") && (\n            <div className=\"space-y-2\">\n              <Label>Date prÃ©vue de l'Ã©vÃ©nement</Label>\n              <Popover>\n                <PopoverTrigger asChild>\n                  <Button\n                    variant=\"outline\"\n                    className=\"w-full justify-start text-left font-normal\"\n                  >\n                    <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                    {quote.eventDate ? (\n                      format(quote.eventDate, \"PPP\", { locale: fr })\n                    ) : (\n                      <span>Choisir une date</span>\n                    )}\n                  </Button>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-auto p-0\">\n                  <Calendar\n                    mode=\"single\"\n                    selected={quote.eventDate}\n                    onSelect={(date) => handleInputChange(\"eventDate\", date)}\n                    disabled={(date) => date < new Date()}\n                    initialFocus\n                  />\n                </PopoverContent>\n              </Popover>\n            </div>\n          )}\n\n          {/* Budget */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"budget\">Budget envisagÃ©</Label>\n            <Select value={quote.budget} onValueChange={(value) => handleInputChange(\"budget\", value)}>\n              <SelectTrigger>\n                <SelectValue placeholder=\"SÃ©lectionnez votre budget\" />\n              </SelectTrigger>\n              <SelectContent>\n                {budgetOptions.map((option) => (\n                  <SelectItem key={option.value} value={option.value}>\n                    {option.label}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Description */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"description\">Description de votre projet *</Label>\n            <Textarea\n              id=\"description\"\n              value={quote.description}\n              onChange={(e) => handleInputChange(\"description\", e.target.value)}\n              placeholder={getPlaceholderText()}\n              className=\"min-h-[120px] resize-none\"\n              required\n            />\n            <p className=\"text-xs text-gray-500\">\n              Plus vous nous donnez de dÃ©tails, plus notre devis sera prÃ©cis !\n            </p>\n          </div>\n\n          {/* Submit Button */}\n          <Button\n            type=\"submit\"\n            disabled={!isFormValid() || createQuoteMutation.isPending}\n            className=\"w-full bg-gold text-white hover:bg-gold/90 py-3 text-lg\"\n          >\n            {createQuoteMutation.isPending ? \"Envoi en cours...\" : \"Envoyer ma demande\"}\n          </Button>\n\n          {/* Additional Info */}\n          <div className=\"text-center text-sm text-gray-600 space-y-1\">\n            <p>ð Vous prÃ©fÃ©rez nous appeler ? <strong>06 88 00 39 28</strong></p>\n            <p>ð Zone d'intervention : Bordeaux MÃ©tropole</p>\n            <p>ð Nous vous recontactons sous 24h ouvrÃ©es</p>\n          </div>\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":8897},"client/src/components/Layout.tsx":{"content":"import Navigation from \"./Navigation\";\n\ninterface LayoutProps {\n  children: React.ReactNode;\n}\n\nexport default function Layout({ children }: LayoutProps) {\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation />\n      <main className=\"pt-20\">\n        {children}\n      </main>\n      \n      {/* Footer */}\n      <footer className=\"bg-gray-800 text-white py-12\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-4 gap-8\">\n            <div>\n              <h3 className=\"text-2xl font-playfair font-bold metallic-gold mb-4\">SakaDeco Group</h3>\n              <p className=\"text-gray-300 mb-4\">L'Ã©lÃ©gance au service de vos moments et de vos espaces</p>\n              <div className=\"flex space-x-4\">\n                <a href=\"#\" className=\"text-gray-300 hover:text-gold transition-colors\">\n                  <span className=\"text-xl\">ð·</span>\n                </a>\n                <a href=\"#\" className=\"text-gray-300 hover:text-gold transition-colors\">\n                  <span className=\"text-xl\">ð</span>\n                </a>\n                <a href=\"#\" className=\"text-gray-300 hover:text-gold transition-colors\">\n                  <span className=\"text-xl\">ð</span>\n                </a>\n              </div>\n            </div>\n            \n            <div>\n              <h4 className=\"font-semibold mb-4\">Nos Services</h4>\n              <ul className=\"space-y-2 text-gray-300\">\n                <li><a href=\"/shop\" className=\"hover:text-gold transition-colors\">SKD Shop</a></li>\n                <li><a href=\"/crea\" className=\"hover:text-gold transition-colors\">SKD CrÃ©a</a></li>\n                <li><a href=\"/rent\" className=\"hover:text-gold transition-colors\">SKD Rent</a></li>\n                <li><a href=\"/events\" className=\"hover:text-gold transition-colors\">SKD Events</a></li>\n                <li><a href=\"/home\" className=\"hover:text-gold transition-colors\">SKD Home</a></li>\n                <li><a href=\"/co\" className=\"hover:text-gold transition-colors\">SKD & Co</a></li>\n              </ul>\n            </div>\n            \n            <div>\n              <h4 className=\"font-semibold mb-4\">Contact</h4>\n              <ul className=\"space-y-2 text-gray-300\">\n                <li><span className=\"text-gold mr-2\">ð</span> 06 88 00 39 28</li>\n                <li><span className=\"text-gold mr-2\">ð</span> Bordeaux MÃ©tropole</li>\n                <li><span className=\"text-gold mr-2\">ð</span> Sur rendez-vous</li>\n              </ul>\n            </div>\n            \n            <div>\n              <h4 className=\"font-semibold mb-4\">Newsletter</h4>\n              <p className=\"text-gray-300 mb-4\">Restez informÃ©s de nos derniÃ¨res crÃ©ations</p>\n              <div className=\"flex\">\n                <input \n                  type=\"email\" \n                  placeholder=\"Votre email\" \n                  className=\"flex-1 p-2 rounded-l-lg text-gray-800\"\n                />\n                <button className=\"bg-gold px-4 py-2 rounded-r-lg hover:bg-gold/90 transition-colors\">\n                  <span>ð¤</span>\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"border-t border-gray-700 mt-8 pt-8 text-center\">\n            <p className=\"text-gray-300\">&copy; 2024 SakaDeco Group. Tous droits rÃ©servÃ©s.</p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n","size_bytes":3435},"client/src/components/Navigation.tsx":{"content":"import { Link, useLocation } from \"wouter\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { Button } from \"@/components/ui/button\";\nimport { \n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n} from \"@/components/ui/sheet\";\nimport { Menu, User, LogOut } from \"lucide-react\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\n\nexport default function Navigation() {\n  const { user, isAuthenticated, isLoading } = useAuth();\n  const [location] = useLocation();\n\n  const services = [\n    { name: \"Shop\", path: \"/shop\", color: \"skd-shop\", title: \"SKD Shop\" },\n    { name: \"CrÃ©a\", path: \"/crea\", color: \"skd-crea\", title: \"SKD CrÃ©a\" },\n    { name: \"Rent\", path: \"/rent\", color: \"skd-rent\", title: \"SKD Rent\" },\n    { name: \"Events\", path: \"/events\", color: \"skd-events\", title: \"SKD Events\" },\n    { name: \"Home\", path: \"/home\", color: \"skd-home\", title: \"SKD Home\" },\n    { name: \"& Co\", path: \"/co\", color: \"skd-co\", title: \"SKD & Co\" },\n  ];\n\n  if (isLoading) {\n    return (\n      <nav className=\"fixed top-0 w-full bg-white/95 backdrop-blur-sm z-50 border-b border-gold/20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-20\">\n            <div className=\"animate-pulse\">\n              <div className=\"h-8 w-48 bg-gray-200 rounded\"></div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n\n  return (\n    <nav className=\"fixed top-0 w-full bg-white/95 backdrop-blur-sm z-50 border-b border-gold/20\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-20\">\n          <div className=\"flex items-center\">\n            <Link href=\"/\">\n              <h1 className=\"text-2xl font-playfair font-bold metallic-gold cursor-pointer\">\n                SakaDeco Group\n              </h1>\n            </Link>\n            <span className=\"ml-3 text-sm text-gray-600 font-light hidden sm:block\">\n              L'Ã©lÃ©gance au service de vos moments\n            </span>\n          </div>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden lg:flex items-center space-x-8\">\n            <Link href=\"/\" className={`text-gray-700 hover:text-gold transition-colors ${location === \"/\" ? \"text-gold font-medium\" : \"\"}`}>\n              Accueil\n            </Link>\n            \n            {services.map((service) => (\n              <Link key={service.path} href={service.path} className={`text-gray-700 hover:text-gold transition-colors ${location === service.path ? \"text-gold font-medium\" : \"\"}`}>\n                {service.name}\n              </Link>\n            ))}\n            \n            <Link href=\"/about\" className={`text-gray-700 hover:text-gold transition-colors ${location === \"/about\" ? \"text-gold font-medium\" : \"\"}`}>\n              Ã propos\n            </Link>\n            \n            <Link href=\"/contact\" className={`text-gray-700 hover:text-gold transition-colors ${location === \"/contact\" ? \"text-gold font-medium\" : \"\"}`}>\n              Contact\n            </Link>\n\n            {isAuthenticated ? (\n              <DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                  <Button variant=\"ghost\" className=\"relative h-10 w-10 rounded-full\">\n                    <Avatar className=\"h-10 w-10\">\n                      <AvatarImage src={user?.profileImageUrl || undefined} alt={user?.firstName || \"\"} />\n                      <AvatarFallback className=\"bg-gold text-white\">\n                        {user?.firstName?.[0] || user?.email?.[0] || \"U\"}\n                      </AvatarFallback>\n                    </Avatar>\n                  </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent className=\"w-56\" align=\"end\" forceMount>\n                  <DropdownMenuItem className=\"flex-col items-start\">\n                    <div className=\"font-medium\">{user?.firstName} {user?.lastName}</div>\n                    <div className=\"text-sm text-muted-foreground\">{user?.email}</div>\n                  </DropdownMenuItem>\n                  <DropdownMenuItem asChild>\n                    <a href=\"/api/logout\" className=\"flex items-center w-full\">\n                      <LogOut className=\"mr-2 h-4 w-4\" />\n                      <span>Se dÃ©connecter</span>\n                    </a>\n                  </DropdownMenuItem>\n                </DropdownMenuContent>\n              </DropdownMenu>\n            ) : (\n              <Button asChild className=\"bg-gold text-white hover:bg-gold/90\">\n                <a href=\"/api/login\">Se connecter</a>\n              </Button>\n            )}\n          </div>\n\n          {/* Mobile Navigation */}\n          <Sheet>\n            <SheetTrigger asChild>\n              <Button variant=\"ghost\" size=\"icon\" className=\"lg:hidden\">\n                <Menu className=\"h-6 w-6\" />\n              </Button>\n            </SheetTrigger>\n            <SheetContent>\n              <SheetHeader>\n                <SheetTitle className=\"font-playfair metallic-gold\">SakaDeco Group</SheetTitle>\n                <SheetDescription>\n                  L'Ã©lÃ©gance au service de vos moments\n                </SheetDescription>\n              </SheetHeader>\n              \n              <div className=\"mt-8 space-y-4\">\n                {isAuthenticated ? (\n                  <>\n                    <Link href=\"/\" className=\"block py-2 text-lg\">Accueil</Link>\n                    {services.map((service) => (\n                      <Link key={service.path} href={service.path} className=\"flex items-center py-2\">\n                        <div className={`w-4 h-4 rounded-full bg-${service.color} mr-3`} />\n                        <span className=\"text-lg\">{service.title}</span>\n                      </Link>\n                    ))}\n                    \n                    <div className=\"border-t pt-4 mt-6\">\n                      <div className=\"flex items-center space-x-3 mb-4\">\n                        <Avatar className=\"h-8 w-8\">\n                          <AvatarImage src={user?.profileImageUrl || undefined} alt={user?.firstName || \"\"} />\n                          <AvatarFallback className=\"bg-gold text-white text-sm\">\n                            {user?.firstName?.[0] || user?.email?.[0] || \"U\"}\n                          </AvatarFallback>\n                        </Avatar>\n                        <div>\n                          <div className=\"font-medium\">{user?.firstName} {user?.lastName}</div>\n                          <div className=\"text-sm text-gray-500\">{user?.email}</div>\n                        </div>\n                      </div>\n                      <Button asChild variant=\"outline\" className=\"w-full\">\n                        <a href=\"/api/logout\" className=\"flex items-center\">\n                          <LogOut className=\"mr-2 h-4 w-4\" />\n                          Se dÃ©connecter\n                        </a>\n                      </Button>\n                    </div>\n                  </>\n                ) : (\n                  <>\n                    <div className=\"space-y-4\">\n                      {services.map((service) => (\n                        <div key={service.path} className=\"flex items-center py-2\">\n                          <div className={`w-4 h-4 rounded-full bg-${service.color} mr-3`} />\n                          <span className=\"text-lg\">{service.title}</span>\n                        </div>\n                      ))}\n                    </div>\n                    <div className=\"border-t pt-4 mt-6\">\n                      <Button asChild className=\"w-full bg-gold text-white hover:bg-gold/90\">\n                        <a href=\"/api/login\">Se connecter</a>\n                      </Button>\n                    </div>\n                  </>\n                )}\n              </div>\n            </SheetContent>\n          </Sheet>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","size_bytes":8067},"client/src/components/ProductCustomizer.tsx":{"content":"import { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Badge } from \"@/components/ui/badge\";\n\ninterface CustomizationOptions {\n  productType: string;\n  message: string;\n  color: string;\n  size?: string;\n  quantity: number;\n  additionalNotes: string;\n}\n\nconst productTypes = [\n  { value: \"mug\", label: \"Mug personnalisÃ©\", price: 12 },\n  { value: \"totebag\", label: \"Sac tote bag\", price: 15 },\n  { value: \"giftbox\", label: \"BoÃ®te cadeau\", price: 20 },\n  { value: \"invitations\", label: \"Invitations mariage\", price: 8 },\n  { value: \"menu\", label: \"Menus Ã©vÃ©nement\", price: 6 },\n  { value: \"cookies\", label: \"SablÃ©s personnalisÃ©s\", price: 18 },\n];\n\nconst colors = [\n  { value: \"lavender\", label: \"Lavande\", color: \"bg-skd-crea\" },\n  { value: \"gold\", label: \"Or\", color: \"bg-gold\" },\n  { value: \"black\", label: \"Noir\", color: \"bg-gray-800\" },\n  { value: \"white\", label: \"Blanc\", color: \"bg-white border border-gray-300\" },\n  { value: \"pink\", label: \"Rose\", color: \"bg-skd-shop\" },\n  { value: \"blue\", label: \"Bleu\", color: \"bg-skd-co\" },\n];\n\nconst sizes = [\n  { value: \"small\", label: \"Petit\" },\n  { value: \"medium\", label: \"Moyen\" },\n  { value: \"large\", label: \"Grand\" },\n];\n\nexport default function ProductCustomizer() {\n  const [customization, setCustomization] = useState<CustomizationOptions>({\n    productType: \"\",\n    message: \"\",\n    color: \"\",\n    size: \"medium\",\n    quantity: 1,\n    additionalNotes: \"\",\n  });\n\n  const [preview, setPreview] = useState(false);\n\n  const selectedProduct = productTypes.find(p => p.value === customization.productType);\n  const selectedColor = colors.find(c => c.value === customization.color);\n  \n  const totalPrice = selectedProduct ? selectedProduct.price * customization.quantity : 0;\n\n  const handleInputChange = (field: keyof CustomizationOptions, value: string | number) => {\n    setCustomization(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handlePreview = () => {\n    if (!customization.productType || !customization.message) {\n      return;\n    }\n    setPreview(true);\n  };\n\n  const handleAddToCart = () => {\n    // TODO: Implement add to cart functionality\n    console.log(\"Adding to cart:\", customization);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"font-playfair text-skd-crea\">Configurateur de Produit</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          {/* Product Type */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"product-type\">Type de produit *</Label>\n            <Select value={customization.productType} onValueChange={(value) => handleInputChange(\"productType\", value)}>\n              <SelectTrigger>\n                <SelectValue placeholder=\"Choisissez un produit\" />\n              </SelectTrigger>\n              <SelectContent>\n                {productTypes.map((product) => (\n                  <SelectItem key={product.value} value={product.value}>\n                    <div className=\"flex justify-between items-center w-full\">\n                      <span>{product.label}</span>\n                      <Badge variant=\"outline\" className=\"ml-2\">{product.price}â¬</Badge>\n                    </div>\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Message */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"message\">Votre message *</Label>\n            <Textarea\n              id=\"message\"\n              placeholder=\"Entrez votre texte personnalisÃ©...\"\n              value={customization.message}\n              onChange={(e) => handleInputChange(\"message\", e.target.value)}\n              className=\"resize-none\"\n              rows={3}\n            />\n            <p className=\"text-xs text-gray-500\">\n              {customization.message.length}/100 caractÃ¨res maximum\n            </p>\n          </div>\n\n          {/* Color Selection */}\n          <div className=\"space-y-2\">\n            <Label>Couleur *</Label>\n            <div className=\"flex space-x-3\">\n              {colors.map((color) => (\n                <button\n                  key={color.value}\n                  onClick={() => handleInputChange(\"color\", color.value)}\n                  className={`w-10 h-10 rounded-full ${color.color} border-2 transition-all ${\n                    customization.color === color.value \n                      ? \"border-skd-crea ring-2 ring-skd-crea ring-offset-2\" \n                      : \"border-gray-300 hover:border-skd-crea\"\n                  }`}\n                  title={color.label}\n                />\n              ))}\n            </div>\n            {selectedColor && (\n              <p className=\"text-sm text-gray-600\">Couleur sÃ©lectionnÃ©e: {selectedColor.label}</p>\n            )}\n          </div>\n\n          {/* Size (for applicable products) */}\n          {(customization.productType === \"totebag\" || customization.productType === \"giftbox\") && (\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"size\">Taille</Label>\n              <Select value={customization.size} onValueChange={(value) => handleInputChange(\"size\", value)}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {sizes.map((size) => (\n                    <SelectItem key={size.value} value={size.value}>\n                      {size.label}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n          )}\n\n          {/* Quantity */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"quantity\">QuantitÃ©</Label>\n            <Input\n              id=\"quantity\"\n              type=\"number\"\n              min=\"1\"\n              max=\"100\"\n              value={customization.quantity}\n              onChange={(e) => handleInputChange(\"quantity\", parseInt(e.target.value) || 1)}\n              className=\"w-24\"\n            />\n          </div>\n\n          {/* Additional Notes */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"notes\">Instructions supplÃ©mentaires</Label>\n            <Textarea\n              id=\"notes\"\n              placeholder=\"Toute information complÃ©mentaire...\"\n              value={customization.additionalNotes}\n              onChange={(e) => handleInputChange(\"additionalNotes\", e.target.value)}\n              className=\"resize-none\"\n              rows={2}\n            />\n          </div>\n\n          {/* Price Display */}\n          {selectedProduct && (\n            <div className=\"bg-skd-crea/10 p-4 rounded-lg\">\n              <div className=\"flex justify-between items-center\">\n                <div>\n                  <p className=\"font-medium text-gray-800\">Prix total</p>\n                  <p className=\"text-sm text-gray-600\">\n                    {customization.quantity} Ã {selectedProduct.price}â¬\n                  </p>\n                </div>\n                <div className=\"text-2xl font-bold text-skd-crea\">\n                  {totalPrice}â¬\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Action Buttons */}\n          <div className=\"flex space-x-3\">\n            <Button\n              onClick={handlePreview}\n              variant=\"outline\"\n              className=\"flex-1 border-skd-crea text-skd-crea hover:bg-skd-crea/10\"\n              disabled={!customization.productType || !customization.message || !customization.color}\n            >\n              AperÃ§u\n            </Button>\n            <Button\n              onClick={handleAddToCart}\n              className=\"flex-1 bg-skd-crea text-white hover:bg-skd-crea/90\"\n              disabled={!customization.productType || !customization.message || !customization.color}\n            >\n              Ajouter au panier\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Preview Modal */}\n      {preview && (\n        <Card className=\"border-2 border-skd-crea\">\n          <CardHeader>\n            <CardTitle className=\"font-playfair text-skd-crea\">AperÃ§u de votre crÃ©ation</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"bg-gray-50 p-8 rounded-lg text-center\">\n              <div className={`inline-block p-6 rounded-lg ${selectedColor?.color} ${customization.color === \"white\" ? \"border border-gray-300\" : \"\"}`}>\n                <div className={`text-lg font-medium ${customization.color === \"white\" ? \"text-gray-800\" : \"text-white\"}`}>\n                  {customization.message}\n                </div>\n                <div className={`text-sm mt-2 ${customization.color === \"white\" ? \"text-gray-600\" : \"text-white/80\"}`}>\n                  {selectedProduct?.label}\n                </div>\n              </div>\n            </div>\n            <div className=\"mt-4 text-center\">\n              <Button\n                onClick={() => setPreview(false)}\n                variant=\"outline\"\n                className=\"mr-3\"\n              >\n                Modifier\n              </Button>\n              <Button\n                onClick={handleAddToCart}\n                className=\"bg-skd-crea text-white hover:bg-skd-crea/90\"\n              >\n                Confirmer et ajouter\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n","size_bytes":9783},"client/src/components/RentalBooking.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\nimport { CalendarIcon, Clock, RotateCcw } from \"lucide-react\";\nimport { format, addDays, isFriday, isSunday } from \"date-fns\";\nimport { fr } from \"date-fns/locale\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\ninterface RentalBookingProps {\n  product: {\n    id: string;\n    name: string;\n    description: string;\n    price: string;\n    imageUrl: string;\n  };\n  onClose: () => void;\n}\n\ninterface BookingData {\n  customerName: string;\n  customerEmail: string;\n  customerPhone: string;\n  startDate: Date | undefined;\n  endDate: Date | undefined;\n  quantity: number;\n  notes: string;\n}\n\nexport default function RentalBooking({ product, onClose }: RentalBookingProps) {\n  const { toast } = useToast();\n  const [booking, setBooking] = useState<BookingData>({\n    customerName: \"\",\n    customerEmail: \"\",\n    customerPhone: \"\",\n    startDate: undefined,\n    endDate: undefined,\n    quantity: 1,\n    notes: \"\",\n  });\n\n  // Check availability query\n  const { data: availability, isLoading: checkingAvailability } = useQuery({\n    queryKey: [\"/api/rentals/availability\", product.id, booking.startDate, booking.endDate],\n    enabled: !!(booking.startDate && booking.endDate),\n    queryFn: async () => {\n      if (!booking.startDate || !booking.endDate) return null;\n      \n      const response = await fetch(\n        `/api/rentals/availability/${product.id}?startDate=${booking.startDate.toISOString()}&endDate=${booking.endDate.toISOString()}`\n      );\n      return response.json();\n    },\n  });\n\n  // Create rental mutation\n  const createRentalMutation = useMutation({\n    mutationFn: async () => {\n      if (!booking.startDate || !booking.endDate) {\n        throw new Error(\"Dates de location requises\");\n      }\n\n      // Calculate rental period in days\n      const days = Math.ceil((booking.endDate.getTime() - booking.startDate.getTime()) / (1000 * 60 * 60 * 24));\n      const total = days * parseFloat(product.price) * booking.quantity;\n\n      // Create order\n      const orderData = {\n        customerEmail: booking.customerEmail,\n        customerName: booking.customerName,\n        customerPhone: booking.customerPhone,\n        total: total.toString(),\n        orderType: \"rental\",\n        eventDate: booking.startDate.toISOString(),\n        notes: booking.notes,\n        items: [\n          {\n            productId: product.id,\n            quantity: booking.quantity,\n            unitPrice: product.price,\n            rentalStartDate: booking.startDate.toISOString(),\n            rentalEndDate: booking.endDate.toISOString(),\n          }\n        ]\n      };\n\n      return await apiRequest(\"POST\", \"/api/orders\", orderData);\n    },\n    onSuccess: () => {\n      toast({\n        title: \"RÃ©servation confirmÃ©e\",\n        description: \"Votre demande de location a Ã©tÃ© enregistrÃ©e. Nous vous contactons rapidement.\",\n      });\n      onClose();\n    },\n    onError: (error) => {\n      toast({\n        title: \"Erreur\",\n        description: error.message || \"Impossible de crÃ©er la rÃ©servation\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleInputChange = (field: keyof BookingData, value: any) => {\n    setBooking(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleDateSelect = (type: \"start\" | \"end\", date: Date | undefined) => {\n    if (type === \"start\") {\n      setBooking(prev => ({\n        ...prev,\n        startDate: date,\n        // Automatically set end date to Sunday if start date is Friday\n        endDate: date && isFriday(date) ? addDays(date, 2) : prev.endDate,\n      }));\n    } else {\n      setBooking(prev => ({\n        ...prev,\n        endDate: date,\n      }));\n    }\n  };\n\n  const calculateTotal = () => {\n    if (!booking.startDate || !booking.endDate) return 0;\n    const days = Math.ceil((booking.endDate.getTime() - booking.startDate.getTime()) / (1000 * 60 * 60 * 24));\n    return days * parseFloat(product.price) * booking.quantity;\n  };\n\n  const isFormValid = () => {\n    return booking.customerName && \n           booking.customerEmail && \n           booking.startDate && \n           booking.endDate && \n           availability?.available;\n  };\n\n  return (\n    <Dialog open={true} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"font-playfair text-skd-rent\">\n            RÃ©server {product.name}\n          </DialogTitle>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Product Info */}\n          <div className=\"flex items-center space-x-4 p-4 bg-skd-rent/10 rounded-lg\">\n            <img \n              src={product.imageUrl} \n              alt={product.name}\n              className=\"w-16 h-16 object-cover rounded-lg\"\n            />\n            <div>\n              <h3 className=\"font-semibold text-gray-800\">{product.name}</h3>\n              <p className=\"text-sm text-gray-600\">{product.description}</p>\n              <p className=\"text-lg font-bold text-skd-rent\">{product.price}â¬/jour</p>\n            </div>\n          </div>\n\n          {/* Rental Schedule Info */}\n          <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n            <h4 className=\"font-semibold text-blue-800 mb-2 flex items-center\">\n              <Clock className=\"w-4 h-4 mr-2\" />\n              CrÃ©neaux de retrait/retour\n            </h4>\n            <div className=\"grid grid-cols-2 gap-4 text-sm\">\n              <div>\n                <div className=\"font-medium text-blue-700\">Retrait</div>\n                <div className=\"text-blue-600\">Vendredi 17h30-19h30</div>\n              </div>\n              <div>\n                <div className=\"font-medium text-blue-700\">Retour</div>\n                <div className=\"text-blue-600\">Dimanche 15h30-17h30</div>\n              </div>\n            </div>\n          </div>\n\n          {/* Customer Information */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"name\">Nom complet *</Label>\n              <Input\n                id=\"name\"\n                value={booking.customerName}\n                onChange={(e) => handleInputChange(\"customerName\", e.target.value)}\n                placeholder=\"Votre nom\"\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"email\">Email *</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                value={booking.customerEmail}\n                onChange={(e) => handleInputChange(\"customerEmail\", e.target.value)}\n                placeholder=\"votre@email.com\"\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"phone\">TÃ©lÃ©phone</Label>\n              <Input\n                id=\"phone\"\n                value={booking.customerPhone}\n                onChange={(e) => handleInputChange(\"customerPhone\", e.target.value)}\n                placeholder=\"06 XX XX XX XX\"\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"quantity\">QuantitÃ©</Label>\n              <Input\n                id=\"quantity\"\n                type=\"number\"\n                min=\"1\"\n                value={booking.quantity}\n                onChange={(e) => handleInputChange(\"quantity\", parseInt(e.target.value) || 1)}\n              />\n            </div>\n          </div>\n\n          {/* Date Selection */}\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label>Date de retrait (Vendredi) *</Label>\n              <Popover>\n                <PopoverTrigger asChild>\n                  <Button\n                    variant=\"outline\"\n                    className=\"w-full justify-start text-left font-normal\"\n                  >\n                    <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                    {booking.startDate ? (\n                      format(booking.startDate, \"PPP\", { locale: fr })\n                    ) : (\n                      <span>Choisir une date</span>\n                    )}\n                  </Button>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-auto p-0\">\n                  <Calendar\n                    mode=\"single\"\n                    selected={booking.startDate}\n                    onSelect={(date) => handleDateSelect(\"start\", date)}\n                    disabled={(date) => !isFriday(date) || date < new Date()}\n                    initialFocus\n                  />\n                </PopoverContent>\n              </Popover>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label>Date de retour (Dimanche) *</Label>\n              <Popover>\n                <PopoverTrigger asChild>\n                  <Button\n                    variant=\"outline\"\n                    className=\"w-full justify-start text-left font-normal\"\n                  >\n                    <RotateCcw className=\"mr-2 h-4 w-4\" />\n                    {booking.endDate ? (\n                      format(booking.endDate, \"PPP\", { locale: fr })\n                    ) : (\n                      <span>Choisir une date</span>\n                    )}\n                  </Button>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-auto p-0\">\n                  <Calendar\n                    mode=\"single\"\n                    selected={booking.endDate}\n                    onSelect={(date) => handleDateSelect(\"end\", date)}\n                    disabled={(date) => !isSunday(date) || date <= (booking.startDate || new Date())}\n                    initialFocus\n                  />\n                </PopoverContent>\n              </Popover>\n            </div>\n          </div>\n\n          {/* Availability Check */}\n          {booking.startDate && booking.endDate && (\n            <div className={`p-4 rounded-lg ${availability?.available ? \"bg-green-50 border-green-200\" : \"bg-red-50 border-red-200\"}`}>\n              {checkingAvailability ? (\n                <div className=\"flex items-center\">\n                  <div className=\"animate-spin w-4 h-4 border-2 border-skd-rent border-t-transparent rounded-full mr-2\" />\n                  VÃ©rification de la disponibilitÃ©...\n                </div>\n              ) : availability?.available ? (\n                <div className=\"text-green-700 font-medium\">â Disponible pour cette pÃ©riode</div>\n              ) : (\n                <div className=\"text-red-700 font-medium\">â Non disponible pour cette pÃ©riode</div>\n              )}\n            </div>\n          )}\n\n          {/* Notes */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"notes\">Notes supplÃ©mentaires</Label>\n            <Input\n              id=\"notes\"\n              value={booking.notes}\n              onChange={(e) => handleInputChange(\"notes\", e.target.value)}\n              placeholder=\"Informations complÃ©mentaires...\"\n            />\n          </div>\n\n          {/* Total Price */}\n          {booking.startDate && booking.endDate && (\n            <div className=\"bg-skd-rent/10 p-4 rounded-lg\">\n              <div className=\"flex justify-between items-center\">\n                <div>\n                  <p className=\"font-medium text-gray-800\">Prix total</p>\n                  <p className=\"text-sm text-gray-600\">\n                    {Math.ceil((booking.endDate.getTime() - booking.startDate.getTime()) / (1000 * 60 * 60 * 24))} jours Ã {booking.quantity} Ã {product.price}â¬\n                  </p>\n                </div>\n                <div className=\"text-2xl font-bold text-skd-rent\">\n                  {calculateTotal()}â¬\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Action Buttons */}\n          <div className=\"flex space-x-3\">\n            <Button\n              variant=\"outline\"\n              onClick={onClose}\n              className=\"flex-1\"\n            >\n              Annuler\n            </Button>\n            <Button\n              onClick={() => createRentalMutation.mutate()}\n              disabled={!isFormValid() || createRentalMutation.isPending}\n              className=\"flex-1 bg-skd-rent text-white hover:bg-skd-rent/90\"\n            >\n              {createRentalMutation.isPending ? \"RÃ©servation...\" : \"Confirmer la rÃ©servation\"}\n            </Button>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","size_bytes":12921},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/hooks/useAuth.ts":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport type { User } from \"@shared/schema\";\n\nexport function useAuth() {\n  const { data: user, isLoading } = useQuery<User>({\n    queryKey: [\"/api/auth/user\"],\n    retry: false,\n  });\n\n  return {\n    user,\n    isLoading,\n    isAuthenticated: !!user,\n  };\n}\n","size_bytes":307},"client/src/lib/authUtils.ts":{"content":"export function isUnauthorizedError(error: Error): boolean {\n  return /^401: .*Unauthorized/.test(error.message);\n}","size_bytes":115},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/Checkout.tsx":{"content":"import { Link } from \"wouter\";\nimport Layout from \"@/components/Layout\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { AlertCircle, ArrowLeft, CreditCard, Phone, Mail } from \"lucide-react\";\n\nexport default function CheckoutPage() {\n  return (\n    <Layout>\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 py-12\">\n        <div className=\"max-w-4xl mx-auto px-4\">\n          {/* Header */}\n          <div className=\"text-center mb-12\">\n            <Badge className=\"mb-4 px-4 py-2 bg-yellow-100 text-yellow-800 border-yellow-300\">\n              <AlertCircle className=\"mr-2 h-4 w-4\" />\n              FonctionnalitÃ© en dÃ©veloppement\n            </Badge>\n            <h1 className=\"text-4xl font-playfair font-bold text-gray-800 dark:text-gray-100 mb-4\">\n              Commande et Paiement\n            </h1>\n            <p className=\"text-xl text-gray-600 dark:text-gray-400\">\n              Le systÃ¨me de paiement en ligne sera bientÃ´t disponible\n            </p>\n          </div>\n\n          {/* Information Card */}\n          <Card className=\"mb-8 border-0 shadow-lg\">\n            <CardHeader className=\"text-center pb-6\">\n              <div className=\"w-20 h-20 bg-gradient-to-r from-gold to-yellow-500 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <CreditCard className=\"h-10 w-10 text-white\" />\n              </div>\n              <CardTitle className=\"text-2xl font-playfair\">Paiement temporairement indisponible</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-6\">\n                <h3 className=\"font-semibold text-blue-800 dark:text-blue-200 mb-3\">\n                  ð Pour finaliser votre commande dÃ¨s maintenant :\n                </h3>\n                <ul className=\"space-y-2 text-blue-700 dark:text-blue-300\">\n                  <li>â¢ Contactez-nous directement par tÃ©lÃ©phone ou email</li>\n                  <li>â¢ Envoyez-nous les dÃ©tails de votre commande</li>\n                  <li>â¢ Nous vous proposerons plusieurs moyens de paiement</li>\n                  <li>â¢ PossibilitÃ© de paiement en plusieurs fois</li>\n                </ul>\n              </div>\n\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                {/* Contact par tÃ©lÃ©phone */}\n                <div className=\"flex items-start space-x-4 p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800\">\n                  <div className=\"w-12 h-12 bg-green-500 rounded-full flex items-center justify-center flex-shrink-0\">\n                    <Phone className=\"h-6 w-6 text-white\" />\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-green-800 dark:text-green-200 mb-1\">\n                      Appelez-nous\n                    </h4>\n                    <p className=\"text-green-700 dark:text-green-300 text-sm mb-2\">\n                      Parlons de votre projet directement\n                    </p>\n                    <p className=\"text-green-600 dark:text-green-400 font-bold text-lg\">\n                      06 88 00 39 28\n                    </p>\n                  </div>\n                </div>\n\n                {/* Contact par email */}\n                <div className=\"flex items-start space-x-4 p-4 bg-purple-50 dark:bg-purple-900/20 rounded-lg border border-purple-200 dark:border-purple-800\">\n                  <div className=\"w-12 h-12 bg-purple-500 rounded-full flex items-center justify-center flex-shrink-0\">\n                    <Mail className=\"h-6 w-6 text-white\" />\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-purple-800 dark:text-purple-200 mb-1\">\n                      Formulaire de contact\n                    </h4>\n                    <p className=\"text-purple-700 dark:text-purple-300 text-sm mb-2\">\n                      Envoyez-nous votre demande dÃ©taillÃ©e\n                    </p>\n                    <Button asChild size=\"sm\" className=\"bg-purple-500 hover:bg-purple-600 text-white\">\n                      <Link to=\"/contact\">Contacter</Link>\n                    </Button>\n                  </div>\n                </div>\n              </div>\n\n              {/* Advantages */}\n              <div className=\"bg-gray-50 dark:bg-gray-800 rounded-lg p-6\">\n                <h3 className=\"font-semibold text-gray-800 dark:text-gray-200 mb-4\">\n                  â¨ Avantages de commander par contact direct :\n                </h3>\n                <div className=\"grid md:grid-cols-2 gap-4 text-sm text-gray-600 dark:text-gray-400\">\n                  <div className=\"space-y-2\">\n                    <p>â¢ <strong>Conseil personnalisÃ©</strong> pour votre projet</p>\n                    <p>â¢ <strong>Devis sur mesure</strong> selon vos besoins</p>\n                    <p>â¢ <strong>Paiement flexible</strong> (Ã©chelonnÃ© possible)</p>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <p>â¢ <strong>Livraison optimisÃ©e</strong> selon votre zone</p>\n                    <p>â¢ <strong>Service aprÃ¨s-vente</strong> personnalisÃ©</p>\n                    <p>â¢ <strong>Garantie satisfaction</strong> Ã  100%</p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Navigation */}\n              <div className=\"flex flex-col sm:flex-row gap-4 pt-6\">\n                <Button asChild variant=\"outline\" className=\"flex-1\">\n                  <Link to=\"/shop\">\n                    <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                    Retour au catalogue\n                  </Link>\n                </Button>\n                <Button asChild className=\"flex-1 bg-gradient-to-r from-gold to-yellow-500 hover:from-yellow-500 hover:to-gold text-white\">\n                  <Link to=\"/contact\">\n                    <Phone className=\"mr-2 h-4 w-4\" />\n                    Nous contacter\n                  </Link>\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Timeline */}\n          <Card className=\"border-0 shadow-lg\">\n            <CardHeader>\n              <CardTitle className=\"text-center\">ð FonctionnalitÃ©s Ã  venir</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center space-x-4 p-4 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg\">\n                  <div className=\"w-8 h-8 bg-yellow-500 rounded-full flex items-center justify-center\">\n                    <span className=\"text-white font-bold text-sm\">1</span>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-yellow-800 dark:text-yellow-200\">\n                      Paiement en ligne sÃ©curisÃ©\n                    </h4>\n                    <p className=\"text-yellow-700 dark:text-yellow-300 text-sm\">\n                      Carte bancaire, PayPal, virement instantanÃ©\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center space-x-4 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n                  <div className=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center\">\n                    <span className=\"text-white font-bold text-sm\">2</span>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-blue-800 dark:text-blue-200\">\n                      Suivi de commande en temps rÃ©el\n                    </h4>\n                    <p className=\"text-blue-700 dark:text-blue-300 text-sm\">\n                      Notifications SMS/Email Ã  chaque Ã©tape\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center space-x-4 p-4 bg-green-50 dark:bg-green-900/20 rounded-lg\">\n                  <div className=\"w-8 h-8 bg-green-500 rounded-full flex items-center justify-center\">\n                    <span className=\"text-white font-bold text-sm\">3</span>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-green-800 dark:text-green-200\">\n                      Espace client personnalisÃ©\n                    </h4>\n                    <p className=\"text-green-700 dark:text-green-300 text-sm\">\n                      Historique, favoris, recommandations\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n","size_bytes":8867},"client/src/pages/Co.tsx":{"content":"import Layout from \"@/components/Layout\";\nimport ContactForm from \"@/components/ContactForm\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Users, ClipboardList, CalendarCheck, Lightbulb } from \"lucide-react\";\n\nexport default function Co() {\n  const services = [\n    {\n      icon: ClipboardList,\n      title: \"Coordination A Ã  Z\",\n      description: \"Gestion complÃ¨te de l'Ã©vÃ©nement, de la planification initiale Ã  la coordination du jour J\",\n      features: [\"Recherche de prestataires\", \"Gestion du budget\", \"Planning dÃ©taillÃ©\", \"Suivi qualitÃ©\"]\n    },\n    {\n      icon: CalendarCheck,\n      title: \"Gestion Jour J\",\n      description: \"PrÃ©sence sur place pour coordonner tous les prestataires et assurer le bon dÃ©roulement\",\n      features: [\"Coordination Ã©quipes\", \"Gestion des imprÃ©vus\", \"Respect du timing\", \"Assistance complÃ¨te\"]\n    },\n    {\n      icon: Lightbulb,\n      title: \"CrÃ©ation de Concept\",\n      description: \"DÃ©veloppement de thÃ¨mes originaux et scÃ©nographies personnalisÃ©es pour votre Ã©vÃ©nement\",\n      features: [\"ThÃ¨mes sur-mesure\", \"ScÃ©nographie unique\", \"Ambiances personnalisÃ©es\", \"Innovation crÃ©ative\"]\n    }\n  ];\n\n  const processSteps = [\n    {\n      number: 1,\n      title: \"Consultation\",\n      description: \"Ãcoute de vos besoins\"\n    },\n    {\n      number: 2,\n      title: \"Conception\",\n      description: \"CrÃ©ation du concept\"\n    },\n    {\n      number: 3,\n      title: \"Planification\",\n      description: \"Organisation dÃ©taillÃ©e\"\n    },\n    {\n      number: 4,\n      title: \"RÃ©alisation\",\n      description: \"Jour J parfait\"\n    }\n  ];\n\n  return (\n    <Layout>\n      {/* Header */}\n      <section className=\"py-20 bg-gradient-to-br from-skd-co/10 to-white\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <div className=\"inline-flex items-center justify-center w-16 h-16 bg-skd-co rounded-full mb-6\">\n              <Users className=\"text-white text-2xl\" />\n            </div>\n            <h1 className=\"text-4xl font-playfair font-bold text-gray-800 mb-4\">SKD & Co</h1>\n            <p className=\"text-xl text-gray-600 mb-2\">Organisation d'Ã©vÃ©nements</p>\n            <p className=\"text-lg font-playfair text-skd-co italic\">Â« On s'occupe de tout, vous profitez de l'instant Â»</p>\n          </div>\n        </div>\n      </section>\n\n      {/* Services */}\n      <section className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-3 gap-8\">\n            {services.map((service, index) => {\n              const IconComponent = service.icon;\n              return (\n                <Card key={index} className=\"text-center border-2 border-skd-co/20 hover:border-skd-co/50 transition-colors shadow-lg\">\n                  <CardHeader>\n                    <div className=\"w-16 h-16 bg-skd-co rounded-full flex items-center justify-center mx-auto mb-6\">\n                      <IconComponent className=\"text-white text-2xl\" />\n                    </div>\n                    <CardTitle className=\"font-playfair text-gray-800\">{service.title}</CardTitle>\n                    <p className=\"text-gray-600\">{service.description}</p>\n                  </CardHeader>\n                  <CardContent>\n                    <ul className=\"text-sm text-gray-500 space-y-2\">\n                      {service.features.map((feature, featureIndex) => (\n                        <li key={featureIndex}>â¢ {feature}</li>\n                      ))}\n                    </ul>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Process */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <h3 className=\"text-2xl font-playfair font-semibold text-gray-800 mb-8 text-center\">Notre Processus</h3>\n          <div className=\"flex flex-wrap justify-center items-center space-x-0 lg:space-x-8\">\n            {processSteps.map((step, index) => (\n              <div key={index} className=\"flex flex-col lg:flex-row items-center mb-8 lg:mb-0\">\n                <div className=\"flex flex-col items-center\">\n                  <div className=\"w-12 h-12 bg-skd-co text-white rounded-full flex items-center justify-center font-bold mb-3 text-lg\">\n                    {step.number}\n                  </div>\n                  <h4 className=\"font-medium text-gray-800 mb-2\">{step.title}</h4>\n                  <p className=\"text-sm text-gray-600 text-center max-w-24\">{step.description}</p>\n                </div>\n                {index < processSteps.length - 1 && (\n                  <div className=\"hidden lg:block mx-4\">\n                    <svg className=\"w-8 h-6 text-skd-co\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\" clipRule=\"evenodd\"></path>\n                    </svg>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Why Choose Us */}\n      <section className=\"py-20\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <h3 className=\"text-2xl font-playfair font-semibold text-gray-800 mb-8 text-center\">\n            Pourquoi Nous Choisir ?\n          </h3>\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            <Card className=\"border-l-4 border-skd-co\">\n              <CardContent className=\"p-6\">\n                <h4 className=\"font-semibold text-gray-800 mb-3\">ð¯ Expertise Reconnue</h4>\n                <p className=\"text-gray-600\">\n                  Plus de 7 ans d'expÃ©rience dans l'organisation d'Ã©vÃ©nements avec des rÃ©fÃ©rences \n                  clients satisfaites et des partenaires de confiance.\n                </p>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"border-l-4 border-skd-co\">\n              <CardContent className=\"p-6\">\n                <h4 className=\"font-semibold text-gray-800 mb-3\">ð¡ CrÃ©ativitÃ© Sur-Mesure</h4>\n                <p className=\"text-gray-600\">\n                  Chaque Ã©vÃ©nement est unique. Nous crÃ©ons des concepts originaux qui reflÃ¨tent \n                  votre personnalitÃ© et vos valeurs.\n                </p>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"border-l-4 border-skd-co\">\n              <CardContent className=\"p-6\">\n                <h4 className=\"font-semibold text-gray-800 mb-3\">ð¤ Accompagnement Total</h4>\n                <p className=\"text-gray-600\">\n                  De la conception Ã  la rÃ©alisation, nous vous accompagnons Ã  chaque Ã©tape \n                  pour que votre Ã©vÃ©nement soit parfait.\n                </p>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"border-l-4 border-skd-co\">\n              <CardContent className=\"p-6\">\n                <h4 className=\"font-semibold text-gray-800 mb-3\">ð ProximitÃ© Bordelaise</h4>\n                <p className=\"text-gray-600\">\n                  BasÃ©s Ã  Bordeaux, nous connaissons parfaitement la rÃ©gion et ses meilleurs \n                  prestataires pour vous offrir un service d'excellence.\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Types of Events */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <h3 className=\"text-2xl font-playfair font-semibold text-gray-800 mb-8 text-center\">\n            Types d'ÃvÃ©nements OrganisÃ©s\n          </h3>\n          <div className=\"grid md:grid-cols-3 gap-6\">\n            <Card className=\"text-center p-6 border-2 border-skd-co/20 hover:border-skd-co/50 transition-colors\">\n              <div className=\"w-16 h-16 bg-skd-co/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <span className=\"text-2xl\">ð</span>\n              </div>\n              <h4 className=\"font-playfair font-semibold text-gray-800 mb-3\">Mariages</h4>\n              <p className=\"text-gray-600\">CÃ©rÃ©monie civile, religieuse, laÃ¯que, rÃ©ception, cocktail</p>\n            </Card>\n            \n            <Card className=\"text-center p-6 border-2 border-skd-co/20 hover:border-skd-co/50 transition-colors\">\n              <div className=\"w-16 h-16 bg-skd-co/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <span className=\"text-2xl\">ð¢</span>\n              </div>\n              <h4 className=\"font-playfair font-semibold text-gray-800 mb-3\">ÃvÃ©nements Corporate</h4>\n              <p className=\"text-gray-600\">SÃ©minaires, lancements produit, team building, galas</p>\n            </Card>\n            \n            <Card className=\"text-center p-6 border-2 border-skd-co/20 hover:border-skd-co/50 transition-colors\">\n              <div className=\"w-16 h-16 bg-skd-co/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <span className=\"text-2xl\">ð</span>\n              </div>\n              <h4 className=\"font-playfair font-semibold text-gray-800 mb-3\">ÃvÃ©nements PrivÃ©s</h4>\n              <p className=\"text-gray-600\">Anniversaires, baptÃªmes, communions, fÃªtes familiales</p>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Form */}\n      <section className=\"py-20 bg-gradient-to-br from-skd-co/10 to-white\">\n        <div className=\"max-w-4xl mx-auto px-4\">\n          <div className=\"text-center mb-12\">\n            <h3 className=\"text-2xl font-playfair font-semibold text-gray-800 mb-4\">\n              Organisons Votre ÃvÃ©nement Ensemble\n            </h3>\n            <p className=\"text-gray-600\">\n              Confiez-nous votre projet et concentrez-vous sur l'essentiel : profiter de votre Ã©vÃ©nement\n            </p>\n          </div>\n          <ContactForm serviceType=\"co\" />\n        </div>\n      </section>\n    </Layout>\n  );\n}\n","size_bytes":10144},"client/src/pages/Crea.tsx":{"content":"import Layout from \"@/components/Layout\";\nimport ProductCustomizer from \"@/components/ProductCustomizer\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Palette } from \"lucide-react\";\n\nexport default function Crea() {\n  return (\n    <Layout>\n      {/* Header */}\n      <section className=\"py-20 bg-gradient-to-br from-skd-crea/10 to-white\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <div className=\"inline-flex items-center justify-center w-16 h-16 bg-skd-crea rounded-full mb-6\">\n              <Palette className=\"text-white text-2xl\" />\n            </div>\n            <h1 className=\"text-4xl font-playfair font-bold text-gray-800 mb-4\">SKD CrÃ©a</h1>\n            <p className=\"text-xl text-gray-600 mb-2\">Personnalisation & papeterie</p>\n            <p className=\"text-lg font-playfair text-skd-crea italic\">Â« Du sur-mesure pour vos plus belles attentions Â»</p>\n          </div>\n        </div>\n      </section>\n\n      {/* Product Customizer */}\n      <section className=\"py-20\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-start\">\n            <div>\n              <h2 className=\"text-2xl font-playfair font-semibold text-gray-800 mb-6\">Configurateur de Produit</h2>\n              <ProductCustomizer />\n            </div>\n            \n            <div className=\"space-y-6\">\n              <img \n                src=\"https://images.unsplash.com/photo-1513475382585-d06e58bcb0e0?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80\" \n                alt=\"Cadeaux personnalisÃ©s et papeterie Ã©lÃ©gante\" \n                className=\"rounded-xl shadow-lg w-full\"\n              />\n              \n              <div className=\"grid grid-cols-2 gap-4\">\n                <Card className=\"text-center p-4\">\n                  <span className=\"text-2xl mb-2 block\">â</span>\n                  <div className=\"font-medium text-gray-800\">Mugs & Objets</div>\n                </Card>\n                <Card className=\"text-center p-4\">\n                  <span className=\"text-2xl mb-2 block\">âï¸</span>\n                  <div className=\"font-medium text-gray-800\">Papeterie</div>\n                </Card>\n                <Card className=\"text-center p-4\">\n                  <span className=\"text-2xl mb-2 block\">ð</span>\n                  <div className=\"font-medium text-gray-800\">Gourmandises</div>\n                </Card>\n                <Card className=\"text-center p-4\">\n                  <span className=\"text-2xl mb-2 block\">ð</span>\n                  <div className=\"font-medium text-gray-800\">BoÃ®tes Cadeau</div>\n                </Card>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Services */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <h3 className=\"text-2xl font-playfair font-semibold text-gray-800 mb-8 text-center\">Nos CrÃ©ations PersonnalisÃ©es</h3>\n          <div className=\"grid md:grid-cols-3 gap-6\">\n            <Card className=\"border-l-4 border-skd-crea\">\n              <CardHeader>\n                <CardTitle className=\"font-playfair text-gray-800\">Cadeaux PersonnalisÃ©s</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-gray-600 mb-4\">Mugs, sacs, boÃ®tes avec vos messages et designs uniques</p>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-500\">Ã partir de 12â¬</span>\n                  <span className=\"text-skd-crea font-medium\">Personnalisable</span>\n                </div>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"border-l-4 border-skd-crea\">\n              <CardHeader>\n                <CardTitle className=\"font-playfair text-gray-800\">Papeterie d'ÃvÃ©nement</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-gray-600 mb-4\">Menus, Ã©tiquettes, invitations pour vos occasions spÃ©ciales</p>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-500\">Ã partir de 8â¬</span>\n                  <span className=\"text-skd-crea font-medium\">Sur mesure</span>\n                </div>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"border-l-4 border-skd-crea\">\n              <CardHeader>\n                <CardTitle className=\"font-playfair text-gray-800\">Objets Gourmands</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-gray-600 mb-4\">SablÃ©s, bonbons, chocolats avec messages personnalisÃ©s</p>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-500\">Ã partir de 15â¬</span>\n                  <span className=\"text-skd-crea font-medium\">Fait main</span>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n    </Layout>\n  );\n}\n","size_bytes":5170},"client/src/pages/Events.tsx":{"content":"import Layout from \"@/components/Layout\";\nimport ContactForm from \"@/components/ContactForm\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Star, Heart, Cake, Baby } from \"lucide-react\";\n\nexport default function Events() {\n  const services = [\n    {\n      icon: Heart,\n      title: \"Mariages\",\n      description: \"CÃ©rÃ©monies et rÃ©ceptions sur-mesure avec arches florales, centres de table et scÃ©nographies uniques\"\n    },\n    {\n      icon: Cake,\n      title: \"Anniversaires\", \n      description: \"FÃªtes d'anniversaire mÃ©morables avec thÃ¨mes personnalisÃ©s et dÃ©corations spectaculaires\"\n    },\n    {\n      icon: Baby,\n      title: \"Baby Showers\",\n      description: \"CÃ©lÃ©brations douces et raffinÃ©es pour accueillir bÃ©bÃ© avec style et Ã©motion\"\n    }\n  ];\n\n  const galleryImages = [\n    {\n      url: \"https://images.unsplash.com/photo-1464207687429-7505649dae38?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80\",\n      alt: \"RÃ©ception de mariage Ã©lÃ©gante\"\n    },\n    {\n      url: \"https://images.unsplash.com/photo-1478146896981-b80fe463b330?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80\",\n      alt: \"Centres de table floraux\"\n    },\n    {\n      url: \"https://images.unsplash.com/photo-1519741497674-611481863552?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80\",\n      alt: \"CÃ©rÃ©monie en extÃ©rieur avec arche\"\n    },\n    {\n      url: \"https://images.unsplash.com/photo-1530103862676-de8c9debad1d?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80\",\n      alt: \"DÃ©coration d'anniversaire avec ballons\"\n    }\n  ];\n\n  return (\n    <Layout>\n      {/* Header */}\n      <section className=\"py-20 bg-gradient-to-br from-skd-events/10 to-white\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <div className=\"inline-flex items-center justify-center w-16 h-16 bg-skd-events rounded-full mb-6\">\n              <Star className=\"text-white text-2xl\" />\n            </div>\n            <h1 className=\"text-4xl font-playfair font-bold text-gray-800 mb-4\">SKD Events</h1>\n            <p className=\"text-xl text-gray-600 mb-2\">DÃ©coration d'Ã©vÃ©nements</p>\n            <p className=\"text-lg font-playfair text-skd-events italic\">Â« L'art de dÃ©corer vos plus beaux jours Â»</p>\n          </div>\n        </div>\n      </section>\n\n      {/* Services */}\n      <section className=\"py-20\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center mb-16\">\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1464207687429-7505649dae38?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80\" \n                alt=\"DÃ©coration de mariage avec arche fleurie\" \n                className=\"rounded-xl shadow-lg w-full\"\n              />\n            </div>\n            <div>\n              <h2 className=\"text-2xl font-playfair font-semibold text-gray-800 mb-6\">Nos SpÃ©cialitÃ©s</h2>\n              <div className=\"space-y-6\">\n                {services.map((service, index) => {\n                  const IconComponent = service.icon;\n                  return (\n                    <div key={index} className=\"flex items-start space-x-4\">\n                      <div className=\"flex-shrink-0 w-12 h-12 bg-skd-events rounded-full flex items-center justify-center\">\n                        <IconComponent className=\"text-white\" />\n                      </div>\n                      <div>\n                        <h3 className=\"font-semibold text-gray-800 mb-2\">{service.title}</h3>\n                        <p className=\"text-gray-600\">{service.description}</p>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Gallery */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <h3 className=\"text-2xl font-playfair font-semibold text-gray-800 mb-8 text-center\">\n            Galerie de nos CrÃ©ations\n          </h3>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            {galleryImages.map((image, index) => (\n              <div key={index} className=\"group cursor-pointer\">\n                <img \n                  src={image.url}\n                  alt={image.alt}\n                  className=\"rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 h-48 w-full object-cover group-hover:scale-105 transform transition-transform\"\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Process */}\n      <section className=\"py-20\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <h3 className=\"text-2xl font-playfair font-semibold text-gray-800 mb-8 text-center\">\n            Notre Processus de CrÃ©ation\n          </h3>\n          <div className=\"grid md:grid-cols-4 gap-6\">\n            <Card className=\"text-center border-2 border-skd-events/20 hover:border-skd-events/50 transition-colors\">\n              <CardContent className=\"pt-6\">\n                <div className=\"w-12 h-12 bg-skd-events text-white rounded-full flex items-center justify-center font-bold mb-4 mx-auto text-lg\">\n                  1\n                </div>\n                <h4 className=\"font-semibold text-gray-800 mb-2\">Consultation</h4>\n                <p className=\"text-sm text-gray-600\">Ãcoute de vos souhaits et analyse de vos besoins</p>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"text-center border-2 border-skd-events/20 hover:border-skd-events/50 transition-colors\">\n              <CardContent className=\"pt-6\">\n                <div className=\"w-12 h-12 bg-skd-events text-white rounded-full flex items-center justify-center font-bold mb-4 mx-auto text-lg\">\n                  2\n                </div>\n                <h4 className=\"font-semibold text-gray-800 mb-2\">Conception</h4>\n                <p className=\"text-sm text-gray-600\">CrÃ©ation d'un concept sur-mesure et prÃ©sentation 3D</p>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"text-center border-2 border-skd-events/20 hover:border-skd-events/50 transition-colors\">\n              <CardContent className=\"pt-6\">\n                <div className=\"w-12 h-12 bg-skd-events text-white rounded-full flex items-center justify-center font-bold mb-4 mx-auto text-lg\">\n                  3\n                </div>\n                <h4 className=\"font-semibold text-gray-800 mb-2\">RÃ©alisation</h4>\n                <p className=\"text-sm text-gray-600\">Installation professionnelle le jour J</p>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"text-center border-2 border-skd-events/20 hover:border-skd-events/50 transition-colors\">\n              <CardContent className=\"pt-6\">\n                <div className=\"w-12 h-12 bg-skd-events text-white rounded-full flex items-center justify-center font-bold mb-4 mx-auto text-lg\">\n                  4\n                </div>\n                <h4 className=\"font-semibold text-gray-800 mb-2\">DÃ©montage</h4>\n                <p className=\"text-sm text-gray-600\">Remise en Ã©tat aprÃ¨s votre Ã©vÃ©nement</p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Form */}\n      <section className=\"py-20 bg-gradient-to-br from-skd-events/10 to-white\">\n        <div className=\"max-w-4xl mx-auto px-4\">\n          <div className=\"text-center mb-12\">\n            <h3 className=\"text-2xl font-playfair font-semibold text-gray-800 mb-4\">\n              Demander un Devis PersonnalisÃ©\n            </h3>\n            <p className=\"text-gray-600\">\n              Partagez-nous votre vision et nous crÃ©erons la dÃ©coration de vos rÃªves\n            </p>\n          </div>\n          <ContactForm serviceType=\"events\" />\n        </div>\n      </section>\n    </Layout>\n  );\n}\n","size_bytes":7999},"client/src/pages/Home.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Link } from \"wouter\";\nimport Layout from \"@/components/Layout\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ShoppingBag, Palette, Handshake, Star, Home, Users, Phone, MapPin, ArrowRight, Sparkles } from \"lucide-react\";\nimport { Newsletter } from \"@/components/Newsletter\";\nimport { ReviewsSection } from \"@/components/ReviewsSection\";\nimport { GalleryShowcase } from \"@/components/GalleryShowcase\";\nimport { Features } from \"@/components/Features\";\nimport type { Product } from \"@shared/schema\";\n\nexport default function HomePage() {\n  const { data: products, isLoading } = useQuery<Product[]>({\n    queryKey: [\"/api/products\"],\n  });\n\n  const services = [\n    {\n      name: \"SKD Shop\",\n      description: \"Ballons, fleurs & accessoires\",\n      icon: ShoppingBag,\n      color: \"skd-shop\",\n      path: \"/shop\",\n      tagline: \"Offrez la touche qui fait sourire\"\n    },\n    {\n      name: \"SKD CrÃ©a\", \n      description: \"Personnalisation & papeterie\",\n      icon: Palette,\n      color: \"skd-crea\",\n      path: \"/crea\",\n      tagline: \"Du sur-mesure pour vos plus belles attentions\"\n    },\n    {\n      name: \"SKD Rent\",\n      description: \"Location de matÃ©riel festif\", \n      icon: Handshake,\n      color: \"skd-rent\",\n      path: \"/rent\",\n      tagline: \"Louez l'Ã©lÃ©gance. CÃ©lÃ©brez sans limites\"\n    },\n    {\n      name: \"SKD Events\",\n      description: \"DÃ©coration d'Ã©vÃ©nements\",\n      icon: Star,\n      color: \"skd-events\", \n      path: \"/events\",\n      tagline: \"L'art de dÃ©corer vos plus beaux jours\"\n    },\n    {\n      name: \"SKD Home\",\n      description: \"DÃ©coration intÃ©rieure & Home organizing\",\n      icon: Home,\n      color: \"skd-home\",\n      path: \"/home\", \n      tagline: \"Des espaces qui vous ressemblent\"\n    },\n    {\n      name: \"SKD & Co\",\n      description: \"Organisation d'Ã©vÃ©nements\",\n      icon: Users,\n      color: \"skd-co\",\n      path: \"/co\",\n      tagline: \"On s'occupe de tout, vous profitez de l'instant\"\n    }\n  ];\n\n  return (\n    <Layout>\n      {/* Hero Section */}\n      <section className=\"relative min-h-[80vh] flex items-center justify-center overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-gold/20 via-white to-pink-50\"></div>\n        <div className=\"absolute inset-0 bg-[url('https://images.unsplash.com/photo-1519225421980-715cb0215aed?ixlib=rb-4.0.3&auto=format&fit=crop&w=2070&q=80')] bg-cover bg-center opacity-10\"></div>\n        <div className=\"absolute top-10 left-10 animate-float\">\n          <Sparkles className=\"h-8 w-8 text-gold\" />\n        </div>\n        <div className=\"absolute bottom-20 right-20 animate-float\" style={{ animationDelay: '1s' }}>\n          <Sparkles className=\"h-6 w-6 text-pink-400\" />\n        </div>\n        \n        <div className=\"relative z-10 text-center max-w-5xl mx-auto px-6\">\n          <div className=\"mb-8\">\n            <Badge className=\"mb-4 px-4 py-2 bg-gradient-to-r from-gold to-yellow-500 text-white border-none text-sm font-semibold\">\n              â¨ Personnalisation Ã  l'infini â¨\n            </Badge>\n          </div>\n          <h1 className=\"text-6xl md:text-8xl font-playfair font-bold mb-6 leading-tight\">\n            <span className=\"bg-gradient-to-r from-gold via-yellow-500 to-gold bg-clip-text text-transparent\">SakaDeco</span>\n            <span className=\"text-gray-800 dark:text-gray-100\"> Group</span>\n          </h1>\n          <p className=\"text-2xl md:text-3xl text-gray-700 dark:text-gray-300 mb-6 font-light\">\n            L'Ã©lÃ©gance au service de vos moments\n          </p>\n          <p className=\"text-lg text-gray-600 dark:text-gray-400 mb-8 max-w-3xl mx-auto leading-relaxed\">\n            6 pÃ´les d'expertise pour sublimer tous vos Ã©vÃ©nements. \n            De la personnalisation artisanale Ã  l'organisation complÃ¨te, \n            nous transformons vos idÃ©es en rÃ©alitÃ©.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-6 justify-center mb-8\">\n            <Button asChild size=\"lg\" className=\"bg-gradient-to-r from-gold to-yellow-500 hover:from-yellow-500 hover:to-gold text-white px-10 py-6 text-lg font-semibold rounded-full shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105\">\n              <Link to=\"/shop\">\n                <ShoppingBag className=\"mr-2 h-5 w-5\" />\n                DÃ©couvrir nos produits\n              </Link>\n            </Button>\n            <Button asChild variant=\"outline\" size=\"lg\" className=\"border-2 border-gold text-gold hover:bg-gold hover:text-white px-10 py-6 text-lg font-semibold rounded-full shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105\">\n              <Link to=\"/contact\">\n                <Sparkles className=\"mr-2 h-5 w-5\" />\n                Demander un devis\n              </Link>\n            </Button>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 max-w-2xl mx-auto\">\n            <div className=\"flex items-center justify-center gap-2 text-gray-600 dark:text-gray-400\">\n              <Star className=\"h-5 w-5 text-yellow-400 fill-current\" />\n              <span className=\"font-semibold\">Fabrication fait main</span>\n            </div>\n            <div className=\"flex items-center justify-center gap-2 text-gray-600 dark:text-gray-400\">\n              <MapPin className=\"h-5 w-5 text-green-500\" />\n              <span className=\"font-semibold\">ExpÃ©dition Europe</span>\n            </div>\n            <div className=\"flex items-center justify-center gap-2 text-gray-600 dark:text-gray-400\">\n              <Palette className=\"h-5 w-5 text-purple-500\" />\n              <span className=\"font-semibold\">ThÃ¨mes personnalisÃ©s</span>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Services Grid */}\n      <section className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-playfair font-bold text-gray-800 mb-4\">Nos Services</h2>\n            <p className=\"text-xl text-gray-600\">Six pÃ´les d'expertise pour tous vos besoins</p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {services.map((service) => {\n              const IconComponent = service.icon;\n              return (\n                <Card key={service.name} className=\"group hover:shadow-lg transition-all duration-300 border-2 hover:border-gold/30\">\n                  <CardHeader className=\"text-center\">\n                    <div className={`w-16 h-16 mx-auto mb-4 rounded-full bg-${service.color}/20 flex items-center justify-center group-hover:bg-${service.color}/40 transition-colors`}>\n                      <IconComponent className={`text-${service.color} text-2xl`} />\n                    </div>\n                    <CardTitle className=\"font-playfair text-xl\">{service.name}</CardTitle>\n                    <p className=\"text-gray-600\">{service.description}</p>\n                  </CardHeader>\n                  <CardContent>\n                    <p className={`text-sm italic text-${service.color} text-center mb-4`}>\n                      Â« {service.tagline} Â»\n                    </p>\n                    <Button asChild className={`w-full bg-${service.color} hover:bg-${service.color}/90 text-white`}>\n                      <Link href={service.path}>DÃ©couvrir</Link>\n                    </Button>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Ã propos de Pajusly */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1573496359142-b8d87734a5a2?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80\" \n                alt=\"Portrait professionnel de Pajusly, fondatrice\" \n                className=\"rounded-2xl shadow-2xl w-full\"\n              />\n            </div>\n            <div>\n              <h2 className=\"text-4xl font-playfair font-bold text-gray-800 mb-6\">\n                Ã propos de <span className=\"metallic-gold\">Pajusly</span>\n              </h2>\n              <p className=\"text-lg text-gray-700 mb-6 leading-relaxed\">\n                Je me prÃ©sente, je suis Pajusly ! J'habite Ã  Bordeaux et je suis l'heureuse maman de deux enfants. \n                Depuis toujours, ma vÃ©ritable passion, c'est la dÃ©coration.\n              </p>\n              <p className=\"text-gray-600 mb-6 leading-relaxed\">\n                Forte de plusieurs annÃ©es d'expÃ©rience dans la dÃ©coration Ã©vÃ©nementielle, j'ai choisi, en 2024, \n                de structurer mes activitÃ©s sous une identitÃ© unique, Ã  la fois crÃ©ative et professionnelle.\n              </p>\n              <div className=\"grid grid-cols-2 gap-4 mb-8\">\n                <div className=\"text-center p-4 bg-white rounded-lg shadow-sm\">\n                  <div className=\"text-3xl font-playfair font-bold text-gold mb-2\">8+</div>\n                  <div className=\"text-sm text-gray-600\">AnnÃ©es d'expÃ©rience</div>\n                </div>\n                <div className=\"text-center p-4 bg-white rounded-lg shadow-sm\">\n                  <div className=\"text-3xl font-playfair font-bold text-gold mb-2\">6</div>\n                  <div className=\"text-sm text-gray-600\">PÃ´les d'expertise</div>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-gold\">ð</span>\n                  <span className=\"text-gray-600\">Bordeaux MÃ©tropole</span>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-gold\">ð</span>\n                  <span className=\"text-gray-600\">06 88 00 39 28</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <Features />\n\n      {/* Gallery Showcase */}\n      <section className=\"py-20 bg-gray-50 dark:bg-gray-900\">\n        <div className=\"max-w-7xl mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-playfair font-bold text-gray-800 dark:text-gray-100 mb-4\">\n              Nos DerniÃ¨res CrÃ©ations\n            </h2>\n            <p className=\"text-xl text-gray-600 dark:text-gray-400\">\n              DÃ©couvrez notre portfolio de rÃ©alisations exceptionnelles\n            </p>\n          </div>\n          <GalleryShowcase limit={8} showFilters={true} />\n          <div className=\"text-center mt-12\">\n            <Button asChild size=\"lg\" variant=\"outline\" className=\"border-gold text-gold hover:bg-gold hover:text-white\">\n              <Link to=\"/shop\">\n                <ArrowRight className=\"mr-2 h-5 w-5\" />\n                Voir toutes nos crÃ©ations\n              </Link>\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* Customer Reviews */}\n      <ReviewsSection />\n\n      {/* Featured Products */}\n      {!isLoading && products && products.length > 0 && (\n        <section className=\"py-20\">\n          <div className=\"max-w-7xl mx-auto px-4\">\n            <div className=\"text-center mb-16\">\n              <h2 className=\"text-4xl font-playfair font-bold text-gray-800 dark:text-gray-100 mb-4\">Nos Produits Vedettes</h2>\n              <p className=\"text-xl text-gray-600 dark:text-gray-400\">Une sÃ©lection de nos crÃ©ations les plus apprÃ©ciÃ©es</p>\n            </div>\n            \n            <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              {products.slice(0, 4).map((product: Product) => (\n                <Card key={product.id} className=\"group hover:shadow-lg transition-all duration-300 border-0 shadow-md hover:shadow-xl\">\n                  <div className=\"aspect-square overflow-hidden rounded-t-lg relative\">\n                    <img \n                      src={product.imageUrl || \"https://images.unsplash.com/photo-1513475382585-d06e58bcb0e0?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80\"}\n                      alt={product.name}\n                      className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n                    />\n                    {product.isCustomizable && (\n                      <Badge className=\"absolute top-3 left-3 bg-gold text-white px-2 py-1 text-xs\">\n                        â¨ Personnalisable\n                      </Badge>\n                    )}\n                  </div>\n                  <CardContent className=\"p-4\">\n                    <h3 className=\"font-semibold text-gray-800 dark:text-gray-100 mb-2 group-hover:text-gold transition-colors\">{product.name}</h3>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-3 line-clamp-2\">{product.description}</p>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-lg font-bold text-gold\">{product.price}â¬</span>\n                      <Button size=\"sm\" variant=\"outline\" className=\"border-gold text-gold hover:bg-gold hover:text-white\">\n                        Voir dÃ©tails\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n            <div className=\"text-center mt-12\">\n              <Button asChild size=\"lg\" className=\"bg-gradient-to-r from-gold to-yellow-500 hover:from-yellow-500 hover:to-gold text-white\">\n                <Link to=\"/shop\">\n                  <ShoppingBag className=\"mr-2 h-5 w-5\" />\n                  DÃ©couvrir tous nos produits\n                </Link>\n              </Button>\n            </div>\n          </div>\n        </section>\n      )}\n\n      {/* Newsletter Section */}\n      <Newsletter />\n\n      {/* Contact Section */}\n      <section className=\"py-20 bg-gradient-to-br from-gold/10 via-pink-50/50 to-gray-50 dark:from-gray-900 dark:to-gray-800\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-playfair font-bold text-gray-800 dark:text-gray-100 mb-6\">\n              PrÃªts Ã  concrÃ©tiser votre projet ?\n            </h2>\n            <p className=\"text-xl text-gray-600 dark:text-gray-400 mb-8 max-w-3xl mx-auto\">\n              Que ce soit pour un Ã©vÃ©nement exceptionnel, une dÃ©coration personnalisÃ©e ou une organisation complÃ¨te, \n              nous sommes lÃ  pour transformer vos rÃªves en rÃ©alitÃ©.\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-3 gap-8 mb-12\">\n            <Card className=\"text-center p-6 border-0 shadow-lg hover:shadow-xl transition-all duration-300 bg-white dark:bg-gray-800\">\n              <div className=\"w-16 h-16 bg-gradient-to-r from-gold to-yellow-500 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Phone className=\"text-white h-8 w-8\" />\n              </div>\n              <h4 className=\"font-semibold text-gray-800 dark:text-gray-100 mb-2\">Appelez-nous</h4>\n              <p className=\"text-gray-600 dark:text-gray-400 mb-4\">Parlons de votre projet</p>\n              <p className=\"text-gold font-bold text-lg\">06 88 00 39 28</p>\n            </Card>\n            \n            <Card className=\"text-center p-6 border-0 shadow-lg hover:shadow-xl transition-all duration-300 bg-white dark:bg-gray-800\">\n              <div className=\"w-16 h-16 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <MapPin className=\"text-white h-8 w-8\" />\n              </div>\n              <h4 className=\"font-semibold text-gray-800 dark:text-gray-100 mb-2\">Zone d'intervention</h4>\n              <p className=\"text-gray-600 dark:text-gray-400 mb-4\">Nous intervenons dans</p>\n              <p className=\"text-purple-500 font-bold\">Bordeaux MÃ©tropole</p>\n            </Card>\n\n            <Card className=\"text-center p-6 border-0 shadow-lg hover:shadow-xl transition-all duration-300 bg-white dark:bg-gray-800\">\n              <div className=\"w-16 h-16 bg-gradient-to-r from-green-500 to-teal-500 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Sparkles className=\"text-white h-8 w-8\" />\n              </div>\n              <h4 className=\"font-semibold text-gray-800 dark:text-gray-100 mb-2\">Devis gratuit</h4>\n              <p className=\"text-gray-600 dark:text-gray-400 mb-4\">Estimation personnalisÃ©e</p>\n              <p className=\"text-green-500 font-bold\">100% gratuit</p>\n            </Card>\n          </div>\n          \n          <div className=\"text-center\">\n            <Button asChild size=\"lg\" className=\"bg-gradient-to-r from-gold to-yellow-500 hover:from-yellow-500 hover:to-gold text-white px-12 py-6 text-lg font-semibold rounded-full shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105\">\n              <Link to=\"/contact\">\n                <Sparkles className=\"mr-2 h-5 w-5\" />\n                Demander un devis gratuit\n              </Link>\n            </Button>\n            <p className=\"mt-4 text-sm text-gray-500 dark:text-gray-400\">\n              RÃ©ponse sous 24h â¢ Engagement sans obligation\n            </p>\n          </div>\n        </div>\n      </section>\n    </Layout>\n  );\n}\n","size_bytes":17674},"client/src/pages/Landing.tsx":{"content":"import { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { ShoppingBag, Palette, Handshake, Star, Home, Users } from \"lucide-react\";\n\nexport default function Landing() {\n  return (\n    <div className=\"min-h-screen\">\n      {/* Navigation */}\n      <nav className=\"fixed top-0 w-full bg-white/95 backdrop-blur-sm z-50 border-b border-gold/20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-20\">\n            <div className=\"flex items-center\">\n              <h1 className=\"text-2xl font-playfair font-bold metallic-gold\">SakaDeco Group</h1>\n              <span className=\"ml-3 text-sm text-gray-600 font-light\">L'Ã©lÃ©gance au service de vos moments</span>\n            </div>\n            <div className=\"hidden lg:flex items-center space-x-8\">\n              <a href=\"#accueil\" className=\"text-gray-700 hover:text-gold transition-colors\">Accueil</a>\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"w-3 h-3 rounded-full bg-skd-shop hover:scale-125 transition-transform\" title=\"SKD Shop\"></div>\n                <div className=\"w-3 h-3 rounded-full bg-skd-crea hover:scale-125 transition-transform\" title=\"SKD CrÃ©a\"></div>\n                <div className=\"w-3 h-3 rounded-full bg-skd-rent hover:scale-125 transition-transform\" title=\"SKD Rent\"></div>\n                <div className=\"w-3 h-3 rounded-full bg-skd-events hover:scale-125 transition-transform\" title=\"SKD Events\"></div>\n                <div className=\"w-3 h-3 rounded-full bg-skd-home hover:scale-125 transition-transform\" title=\"SKD Home\"></div>\n                <div className=\"w-3 h-3 rounded-full bg-skd-co hover:scale-125 transition-transform\" title=\"SKD & Co\"></div>\n              </div>\n              <Button asChild className=\"bg-gold text-white hover:bg-gold/90\">\n                <a href=\"/api/login\">Se connecter</a>\n              </Button>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      {/* Hero Section */}\n      <section id=\"accueil\" className=\"relative min-h-screen flex items-center justify-center overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-gold/10 via-white to-gold/5\"></div>\n        <img \n          src=\"https://images.unsplash.com/photo-1519225421980-715cb0215aed?ixlib=rb-4.0.3&auto=format&fit=crop&w=2070&q=80\" \n          alt=\"Elegant wedding decoration setup\" \n          className=\"absolute inset-0 w-full h-full object-cover opacity-20\"\n        />\n        \n        <div className=\"relative z-10 text-center max-w-4xl mx-auto px-4\">\n          <h1 className=\"text-6xl md:text-8xl font-playfair font-bold mb-6\">\n            <span className=\"metallic-gold\">SakaDeco</span>\n            <span className=\"text-gray-800\"> Group</span>\n          </h1>\n          <p className=\"text-xl md:text-2xl text-gray-700 mb-8 font-light\">\n            L'Ã©lÃ©gance au service de vos moments et de vos espaces\n          </p>\n          <p className=\"text-lg text-gray-600 mb-12 max-w-2xl mx-auto\">\n            Â« Votre ÃvÃ©nement, Votre IdÃ©e, Notre CrÃ©ation Â»\n          </p>\n          \n          {/* Services Grid */}\n          <div className=\"grid grid-cols-2 md:grid-cols-3 gap-6 max-w-3xl mx-auto mb-12\">\n            <div className=\"group cursor-pointer\">\n              <div className=\"w-20 h-20 mx-auto mb-3 rounded-full bg-skd-shop/20 flex items-center justify-center group-hover:bg-skd-shop/40 transition-colors\">\n                <ShoppingBag className=\"text-skd-shop text-2xl\" />\n              </div>\n              <h3 className=\"font-playfair font-semibold text-gray-800\">Shop</h3>\n              <p className=\"text-sm text-gray-600\">Ballons & Fleurs</p>\n            </div>\n            \n            <div className=\"group cursor-pointer\">\n              <div className=\"w-20 h-20 mx-auto mb-3 rounded-full bg-skd-crea/20 flex items-center justify-center group-hover:bg-skd-crea/40 transition-colors\">\n                <Palette className=\"text-skd-crea text-2xl\" />\n              </div>\n              <h3 className=\"font-playfair font-semibold text-gray-800\">CrÃ©a</h3>\n              <p className=\"text-sm text-gray-600\">Personnalisation</p>\n            </div>\n            \n            <div className=\"group cursor-pointer\">\n              <div className=\"w-20 h-20 mx-auto mb-3 rounded-full bg-skd-rent/20 flex items-center justify-center group-hover:bg-skd-rent/40 transition-colors\">\n                <Handshake className=\"text-skd-rent text-2xl\" />\n              </div>\n              <h3 className=\"font-playfair font-semibold text-gray-800\">Rent</h3>\n              <p className=\"text-sm text-gray-600\">Location</p>\n            </div>\n            \n            <div className=\"group cursor-pointer\">\n              <div className=\"w-20 h-20 mx-auto mb-3 rounded-full bg-skd-events/20 flex items-center justify-center group-hover:bg-skd-events/40 transition-colors\">\n                <Star className=\"text-skd-events text-2xl\" />\n              </div>\n              <h3 className=\"font-playfair font-semibold text-gray-800\">Events</h3>\n              <p className=\"text-sm text-gray-600\">DÃ©coration</p>\n            </div>\n            \n            <div className=\"group cursor-pointer\">\n              <div className=\"w-20 h-20 mx-auto mb-3 rounded-full bg-skd-home/20 flex items-center justify-center group-hover:bg-skd-home/40 transition-colors\">\n                <Home className=\"text-skd-home text-2xl\" />\n              </div>\n              <h3 className=\"font-playfair font-semibold text-gray-800\">Home</h3>\n              <p className=\"text-sm text-gray-600\">IntÃ©rieur</p>\n            </div>\n            \n            <div className=\"group cursor-pointer\">\n              <div className=\"w-20 h-20 mx-auto mb-3 rounded-full bg-skd-co/20 flex items-center justify-center group-hover:bg-skd-co/40 transition-colors\">\n                <Users className=\"text-skd-co text-2xl\" />\n              </div>\n              <h3 className=\"font-playfair font-semibold text-gray-800\">& Co</h3>\n              <p className=\"text-sm text-gray-600\">Organisation</p>\n            </div>\n          </div>\n\n          <Button asChild size=\"lg\" className=\"bg-gold text-white hover:bg-gold/90 px-8 py-4 text-lg\">\n            <a href=\"/api/login\">DÃ©couvrir nos services</a>\n          </Button>\n        </div>\n      </section>\n\n      {/* About Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1573496359142-b8d87734a5a2?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80\" \n                alt=\"Portrait professionnel de Pajusly, fondatrice\" \n                className=\"rounded-2xl shadow-2xl w-full\"\n              />\n            </div>\n            <div>\n              <h2 className=\"text-4xl font-playfair font-bold text-gray-800 mb-6\">\n                Ã propos de <span className=\"metallic-gold\">Pajusly</span>\n              </h2>\n              <p className=\"text-lg text-gray-700 mb-6 leading-relaxed\">\n                Je me prÃ©sente, je suis Pajusly ! J'habite Ã  Bordeaux et je suis l'heureuse maman de deux enfants. \n                Depuis toujours, ma vÃ©ritable passion, c'est la dÃ©coration.\n              </p>\n              <p className=\"text-gray-600 mb-6 leading-relaxed\">\n                Forte de plusieurs annÃ©es d'expÃ©rience dans la dÃ©coration Ã©vÃ©nementielle, j'ai choisi, en 2024, \n                de structurer mes activitÃ©s sous une identitÃ© unique, Ã  la fois crÃ©ative et professionnelle.\n              </p>\n              <div className=\"grid grid-cols-2 gap-4 mb-8\">\n                <div className=\"text-center p-4 bg-white rounded-lg shadow-sm\">\n                  <div className=\"text-3xl font-playfair font-bold text-gold mb-2\">2017</div>\n                  <div className=\"text-sm text-gray-600\">Lancement de l'activitÃ©</div>\n                </div>\n                <div className=\"text-center p-4 bg-white rounded-lg shadow-sm\">\n                  <div className=\"text-3xl font-playfair font-bold text-gold mb-2\">2024</div>\n                  <div className=\"text-sm text-gray-600\">CrÃ©ation SKD Group</div>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-gold\">ð</span>\n                  <span className=\"text-gray-600\">Bordeaux MÃ©tropole</span>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-gold\">ð</span>\n                  <span className=\"text-gray-600\">06 88 00 39 28</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <footer className=\"bg-gray-800 text-white py-12\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"text-center\">\n            <h3 className=\"text-2xl font-playfair font-bold metallic-gold mb-4\">SakaDeco Group</h3>\n            <p className=\"text-gray-300 mb-8\">L'Ã©lÃ©gance au service de vos moments et de vos espaces</p>\n            <Button asChild className=\"bg-gold text-white hover:bg-gold/90\">\n              <a href=\"/api/login\">Commencer maintenant</a>\n            </Button>\n          </div>\n          <div className=\"border-t border-gray-700 mt-8 pt-8 text-center\">\n            <p className=\"text-gray-300\">&copy; 2024 SakaDeco Group. Tous droits rÃ©servÃ©s.</p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n","size_bytes":9715},"client/src/pages/Rent.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport Layout from \"@/components/Layout\";\nimport RentalBooking from \"@/components/RentalBooking\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Handshake, Clock, RotateCcw } from \"lucide-react\";\n\nexport default function Rent() {\n  const [selectedProduct, setSelectedProduct] = useState<any>(null);\n\n  const { data: products, isLoading } = useQuery({\n    queryKey: [\"/api/products\", { category: \"rent\" }],\n  });\n\n  const rentalProducts = [\n    {\n      id: \"1\",\n      name: \"Vaisselle & Linge\",\n      description: \"Nappes, serviettes, assiettes Ã©lÃ©gantes\",\n      price: \"5\",\n      imageUrl: \"https://images.unsplash.com/photo-1464366400600-7168b8af9bc3?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80\"\n    },\n    {\n      id: \"2\", \n      name: \"Structures & Arches\",\n      description: \"Gonflables, arches, photobooth\",\n      price: \"25\",\n      imageUrl: \"https://images.unsplash.com/photo-1511578314322-379afb476865?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80\"\n    },\n    {\n      id: \"3\",\n      name: \"Mobilier Festif\", \n      description: \"Tables, chaises, Ã©lÃ©ments dÃ©co\",\n      price: \"15\",\n      imageUrl: \"https://images.unsplash.com/photo-1519225421980-715cb0215aed?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80\"\n    }\n  ];\n\n  return (\n    <Layout>\n      {/* Header */}\n      <section className=\"py-20 bg-gradient-to-br from-skd-rent/10 to-white\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <div className=\"inline-flex items-center justify-center w-16 h-16 bg-skd-rent rounded-full mb-6\">\n              <Handshake className=\"text-white text-2xl\" />\n            </div>\n            <h1 className=\"text-4xl font-playfair font-bold text-gray-800 mb-4\">SKD Rent</h1>\n            <p className=\"text-xl text-gray-600 mb-2\">Location de matÃ©riel festif</p>\n            <p className=\"text-lg font-playfair text-skd-rent italic\">Â« Louez l'Ã©lÃ©gance. CÃ©lÃ©brez sans limites Â»</p>\n          </div>\n        </div>\n      </section>\n\n      {/* Rental Schedule */}\n      <section className=\"py-20\">\n        <div className=\"max-w-4xl mx-auto px-4\">\n          <Card className=\"border-2 border-skd-rent/20 shadow-lg\">\n            <CardHeader className=\"text-center\">\n              <CardTitle className=\"text-2xl font-playfair text-gray-800\">CrÃ©neaux de Retrait/Retour</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid md:grid-cols-2 gap-8\">\n                <div className=\"text-center p-6 bg-skd-rent/10 rounded-lg\">\n                  <Clock className=\"w-12 h-12 text-skd-rent mx-auto mb-4\" />\n                  <h4 className=\"font-semibold text-gray-800 mb-2\">Retrait</h4>\n                  <p className=\"text-lg font-playfair text-skd-rent\">Vendredi 17h30-19h30</p>\n                </div>\n                <div className=\"text-center p-6 bg-skd-rent/10 rounded-lg\">\n                  <RotateCcw className=\"w-12 h-12 text-skd-rent mx-auto mb-4\" />\n                  <h4 className=\"font-semibold text-gray-800 mb-2\">Retour</h4>\n                  <p className=\"text-lg font-playfair text-skd-rent\">Dimanche 15h30-17h30</p>\n                </div>\n              </div>\n              <p className=\"text-center text-gray-600 mt-6 text-sm\">\n                Veuillez vous assurer d'Ãªtre disponible pendant ces crÃ©neaux horaires\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n      </section>\n\n      {/* Products Grid */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4\">\n          <div className=\"flex justify-between items-center mb-8\">\n            <h2 className=\"text-2xl font-playfair font-semibold text-gray-800\">MatÃ©riel Disponible</h2>\n            <Badge variant=\"outline\" className=\"border-skd-rent text-skd-rent\">\n              Location avec retrait/retour\n            </Badge>\n          </div>\n\n          <div className=\"grid lg:grid-cols-3 gap-8\">\n            {rentalProducts.map((product) => (\n              <Card key={product.id} className=\"group hover:shadow-lg transition-all duration-300 border-2 hover:border-skd-rent/30\">\n                <div className=\"aspect-[4/3] overflow-hidden rounded-t-lg\">\n                  <img \n                    src={product.imageUrl}\n                    alt={product.name}\n                    className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n                  />\n                </div>\n                <CardHeader>\n                  <CardTitle className=\"font-playfair\">{product.name}</CardTitle>\n                  <p className=\"text-gray-600\">{product.description}</p>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"flex justify-between items-center mb-4\">\n                    <span className=\"text-xl font-bold text-skd-rent\">\n                      DÃ¨s {product.price}â¬/jour\n                    </span>\n                    <Button \n                      size=\"sm\" \n                      className=\"bg-skd-rent hover:bg-skd-rent/90 text-white\"\n                      onClick={() => setSelectedProduct(product)}\n                    >\n                      RÃ©server\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Rental Booking Modal */}\n      {selectedProduct && (\n        <RentalBooking\n          product={selectedProduct}\n          onClose={() => setSelectedProduct(null)}\n        />\n      )}\n\n      {/* Info Section */}\n      <section className=\"py-20\">\n        <div className=\"max-w-4xl mx-auto px-4 text-center\">\n          <h3 className=\"text-2xl font-playfair font-semibold text-gray-800 mb-8\">Informations Importantes</h3>\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            <Card className=\"border-l-4 border-skd-rent\">\n              <CardContent className=\"p-6\">\n                <h4 className=\"font-semibold text-gray-800 mb-3\">ð CrÃ©neaux Fixes</h4>\n                <p className=\"text-gray-600\">\n                  Aucun retrait n'est possible en dehors des crÃ©neaux dÃ©finis, \n                  sauf en cas d'Ã©vÃ©nement exceptionnel.\n                </p>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"border-l-4 border-skd-rent\">\n              <CardContent className=\"p-6\">\n                <h4 className=\"font-semibold text-gray-800 mb-3\">ð DisponibilitÃ©</h4>\n                <p className=\"text-gray-600\">\n                  VÃ©rifiez la disponibilitÃ© de votre matÃ©riel avant de confirmer \n                  votre rÃ©servation pour Ã©viter toute dÃ©ception.\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n    </Layout>\n  );\n}\n","size_bytes":7063},"client/src/pages/SKDHome.tsx":{"content":"import Layout from \"@/components/Layout\";\nimport ContactForm from \"@/components/ContactForm\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Home, PaintbrushVertical, Package, Users } from \"lucide-react\";\n\nexport default function SKDHome() {\n  const services = [\n    {\n      icon: PaintbrushVertical,\n      title: \"Relooking IntÃ©rieur\",\n      description: \"Conseils dÃ©co, amÃ©nagements fonctionnels et esthÃ©tiques pour sublimer vos espaces\"\n    },\n    {\n      icon: Package,\n      title: \"Home Organizing\",\n      description: \"Rangement optimisÃ©, tri et dÃ©sencombrement pour retrouver sÃ©rÃ©nitÃ© chez vous\"\n    },\n    {\n      icon: Users,\n      title: \"Coaching Ã  Domicile\",\n      description: \"Accompagnement personnalisÃ© pour transformer durablement vos habitudes\"\n    }\n  ];\n\n  return (\n    <Layout>\n      {/* Header */}\n      <section className=\"py-20 bg-gradient-to-br from-skd-home/10 to-white\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <div className=\"inline-flex items-center justify-center w-16 h-16 bg-skd-home rounded-full mb-6\">\n              <Home className=\"text-white text-2xl\" />\n            </div>\n            <h1 className=\"text-4xl font-playfair font-bold text-gray-800 mb-4\">SKD Home</h1>\n            <p className=\"text-xl text-gray-600 mb-2\">DÃ©coration intÃ©rieure & Home organizing</p>\n            <p className=\"text-lg font-playfair text-skd-home italic\">Â« Des espaces qui vous ressemblent Â»</p>\n          </div>\n        </div>\n      </section>\n\n      {/* Services */}\n      <section className=\"py-20\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-start\">\n            <div>\n              <h2 className=\"text-2xl font-playfair font-semibold text-gray-800 mb-6\">Transformez votre IntÃ©rieur</h2>\n              <div className=\"space-y-6\">\n                {services.map((service, index) => {\n                  const IconComponent = service.icon;\n                  return (\n                    <Card key={index} className=\"border-l-4 border-skd-home\">\n                      <CardContent className=\"p-6\">\n                        <div className=\"flex items-center space-x-4 mb-3\">\n                          <IconComponent className=\"text-skd-home text-xl\" />\n                          <h3 className=\"font-semibold text-gray-800\">{service.title}</h3>\n                        </div>\n                        <p className=\"text-gray-600\">{service.description}</p>\n                      </CardContent>\n                    </Card>\n                  );\n                })}\n              </div>\n            </div>\n            \n            <div className=\"space-y-6\">\n              <img \n                src=\"https://images.unsplash.com/photo-1586023492125-27b2c045efd7?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80\" \n                alt=\"IntÃ©rieur moderne et organisÃ© avec dÃ©coration Ã©lÃ©gante\" \n                className=\"rounded-xl shadow-lg w-full\"\n              />\n              \n              {/* Before/After Comparison */}\n              <Card className=\"shadow-lg\">\n                <CardHeader>\n                  <CardTitle className=\"font-playfair text-gray-800 text-center\">Avant/AprÃ¨s</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"text-center\">\n                      <div className=\"bg-gray-200 rounded-lg h-24 flex items-center justify-center mb-2\">\n                        <span className=\"text-gray-500 text-sm\">Avant</span>\n                      </div>\n                      <p className=\"text-sm text-gray-600\">Espace encombrÃ©</p>\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"bg-skd-home/20 rounded-lg h-24 flex items-center justify-center mb-2\">\n                        <span className=\"text-skd-home text-sm font-medium\">AprÃ¨s</span>\n                      </div>\n                      <p className=\"text-sm text-gray-600\">Harmonie & sÃ©rÃ©nitÃ©</p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Process */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <h3 className=\"text-2xl font-playfair font-semibold text-gray-800 mb-8 text-center\">\n            Notre MÃ©thode d'Intervention\n          </h3>\n          <div className=\"grid md:grid-cols-4 gap-6\">\n            <Card className=\"text-center border-2 border-skd-home/20 hover:border-skd-home/50 transition-colors\">\n              <CardContent className=\"pt-6\">\n                <div className=\"w-12 h-12 bg-skd-home text-white rounded-full flex items-center justify-center font-bold mb-4 mx-auto text-lg\">\n                  1\n                </div>\n                <h4 className=\"font-semibold text-gray-800 mb-2\">Diagnostic</h4>\n                <p className=\"text-sm text-gray-600\">Analyse de vos espaces et de vos besoins</p>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"text-center border-2 border-skd-home/20 hover:border-skd-home/50 transition-colors\">\n              <CardContent className=\"pt-6\">\n                <div className=\"w-12 h-12 bg-skd-home text-white rounded-full flex items-center justify-center font-bold mb-4 mx-auto text-lg\">\n                  2\n                </div>\n                <h4 className=\"font-semibold text-gray-800 mb-2\">Plan d'Action</h4>\n                <p className=\"text-sm text-gray-600\">Proposition de solutions personnalisÃ©es</p>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"text-center border-2 border-skd-home/20 hover:border-skd-home/50 transition-colors\">\n              <CardContent className=\"pt-6\">\n                <div className=\"w-12 h-12 bg-skd-home text-white rounded-full flex items-center justify-center font-bold mb-4 mx-auto text-lg\">\n                  3\n                </div>\n                <h4 className=\"font-semibold text-gray-800 mb-2\">Transformation</h4>\n                <p className=\"text-sm text-gray-600\">Mise en Åuvre avec votre participation</p>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"text-center border-2 border-skd-home/20 hover:border-skd-home/50 transition-colors\">\n              <CardContent className=\"pt-6\">\n                <div className=\"w-12 h-12 bg-skd-home text-white rounded-full flex items-center justify-center font-bold mb-4 mx-auto text-lg\">\n                  4\n                </div>\n                <h4 className=\"font-semibold text-gray-800 mb-2\">Suivi</h4>\n                <p className=\"text-sm text-gray-600\">Accompagnement pour maintenir l'organisation</p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Benefits */}\n      <section className=\"py-20\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <h3 className=\"text-2xl font-playfair font-semibold text-gray-800 mb-8 text-center\">\n            Les BÃ©nÃ©fices du Home Organizing\n          </h3>\n          <div className=\"grid md:grid-cols-3 gap-6\">\n            <Card className=\"text-center p-6 border-2 border-skd-home/20 hover:border-skd-home/50 transition-colors\">\n              <div className=\"w-16 h-16 bg-skd-home/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <span className=\"text-2xl\">ð§ââï¸</span>\n              </div>\n              <h4 className=\"font-playfair font-semibold text-gray-800 mb-3\">SÃ©rÃ©nitÃ©</h4>\n              <p className=\"text-gray-600\">Un environnement ordonnÃ© pour un esprit apaisÃ© et plus de bien-Ãªtre au quotidien</p>\n            </Card>\n            \n            <Card className=\"text-center p-6 border-2 border-skd-home/20 hover:border-skd-home/50 transition-colors\">\n              <div className=\"w-16 h-16 bg-skd-home/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <span className=\"text-2xl\">â°</span>\n              </div>\n              <h4 className=\"font-playfair font-semibold text-gray-800 mb-3\">Gain de Temps</h4>\n              <p className=\"text-gray-600\">Retrouvez facilement vos affaires et optimisez votre organisation personnelle</p>\n            </Card>\n            \n            <Card className=\"text-center p-6 border-2 border-skd-home/20 hover:border-skd-home/50 transition-colors\">\n              <div className=\"w-16 h-16 bg-skd-home/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <span className=\"text-2xl\">â¨</span>\n              </div>\n              <h4 className=\"font-playfair font-semibold text-gray-800 mb-3\">Harmonie</h4>\n              <p className=\"text-gray-600\">Des espaces qui reflÃ¨tent votre personnalitÃ© et favorisent votre Ã©panouissement</p>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Form */}\n      <section className=\"py-20 bg-gradient-to-br from-skd-home/10 to-white\">\n        <div className=\"max-w-4xl mx-auto px-4\">\n          <div className=\"text-center mb-12\">\n            <h3 className=\"text-2xl font-playfair font-semibold text-gray-800 mb-4\">\n              Demander une Consultation Ã  Domicile\n            </h3>\n            <p className=\"text-gray-600\">\n              Parlons de vos projets d'amÃ©nagement et d'organisation\n            </p>\n          </div>\n          <ContactForm serviceType=\"home\" />\n        </div>\n      </section>\n    </Layout>\n  );\n}\n","size_bytes":9700},"client/src/pages/Shop.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport Layout from \"@/components/Layout\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ShoppingBag, Plus } from \"lucide-react\";\nimport type { Product } from \"@shared/schema\";\n\nexport default function Shop() {\n  const { data: products, isLoading, error } = useQuery<Product[]>({\n    queryKey: [\"/api/products\", { category: \"shop\" }],\n  });\n\n  if (isLoading) {\n    return (\n      <Layout>\n        <div className=\"flex items-center justify-center min-h-[50vh]\">\n          <div className=\"animate-spin w-8 h-8 border-4 border-skd-shop border-t-transparent rounded-full\" />\n        </div>\n      </Layout>\n    );\n  }\n\n  if (error) {\n    return (\n      <Layout>\n        <div className=\"text-center py-12\">\n          <p className=\"text-red-600\">Erreur lors du chargement des produits</p>\n        </div>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout>\n      {/* Header */}\n      <section className=\"py-20 bg-gradient-to-br from-skd-shop/10 to-white\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <div className=\"inline-flex items-center justify-center w-16 h-16 bg-skd-shop rounded-full mb-6\">\n              <ShoppingBag className=\"text-white text-2xl\" />\n            </div>\n            <h1 className=\"text-4xl font-playfair font-bold text-gray-800 mb-4\">SKD Shop</h1>\n            <p className=\"text-xl text-gray-600 mb-2\">Vente de ballons, fleurs & accessoires</p>\n            <p className=\"text-lg font-playfair text-skd-shop italic font-semibold\">Â« Offrez la touche qui fait sourire Â»</p>\n            <p className=\"text-base text-gray-600 mt-2\">Des petits dÃ©tails qui font de grands effets</p>\n          </div>\n        </div>\n      </section>\n\n      {/* Products Grid */}\n      <section className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-4\">\n          <div className=\"flex justify-between items-center mb-8\">\n            <h2 className=\"text-2xl font-playfair font-semibold text-gray-800\">Nos Produits</h2>\n            <div className=\"flex items-center space-x-4\">\n              <Badge variant=\"outline\" className=\"border-skd-shop text-skd-shop\">\n                {products?.length || 0} produits disponibles\n              </Badge>\n            </div>\n          </div>\n\n          {!products || products.length === 0 ? (\n            <div className=\"text-center py-16\">\n              <ShoppingBag className=\"w-16 h-16 text-gray-300 mx-auto mb-4\" />\n              <h3 className=\"text-xl font-semibold text-gray-600 mb-2\">Aucun produit disponible</h3>\n              <p className=\"text-gray-500\">Nos produits arrivent bientÃ´t !</p>\n            </div>\n          ) : (\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n              {products.map((product: Product) => (\n                <Card key={product.id} className=\"group hover:shadow-lg transition-all duration-300 border-2 hover:border-skd-shop/30\">\n                  <div className=\"aspect-square overflow-hidden rounded-t-lg\">\n                    <img \n                      src={product.imageUrl || \"https://images.unsplash.com/photo-1530103862676-de8c9debad1d?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80\"}\n                      alt={product.name}\n                      className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n                    />\n                  </div>\n                  <CardHeader className=\"pb-3\">\n                    <CardTitle className=\"text-lg font-playfair\">{product.name}</CardTitle>\n                    {product.subcategory && (\n                      <Badge variant=\"secondary\" className=\"w-fit text-xs\">\n                        {product.subcategory}\n                      </Badge>\n                    )}\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-sm text-gray-600 mb-4 line-clamp-2\">{product.description}</p>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xl font-bold text-skd-shop\">\n                        Ã partir de {product.price}â¬\n                      </span>\n                      <Button size=\"sm\" className=\"bg-skd-shop hover:bg-skd-shop/90 text-white\">\n                        <Plus className=\"w-4 h-4 mr-1\" />\n                        Ajouter\n                      </Button>\n                    </div>\n                    {product.isCustomizable && (\n                      <p className=\"text-xs text-skd-shop mt-2 font-medium\">â¨ Personnalisable</p>\n                    )}\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          )}\n        </div>\n      </section>\n\n      {/* Product Categories */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <h3 className=\"text-2xl font-playfair font-semibold text-gray-800 mb-8 text-center\">Nos CatÃ©gories</h3>\n          <div className=\"grid md:grid-cols-3 gap-6\">\n            <Card className=\"text-center p-6 border-2 border-skd-shop/20 hover:border-skd-shop/50 transition-colors\">\n              <div className=\"w-16 h-16 bg-skd-shop/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <span className=\"text-2xl\">ð</span>\n              </div>\n              <h4 className=\"font-playfair font-semibold text-gray-800 mb-3\">Ballons PersonnalisÃ©s</h4>\n              <p className=\"text-gray-600 mb-4\">Latex, mylar, bulles avec messages sur-mesure</p>\n              <p className=\"text-sm text-gray-500\">Ã partir de 15â¬</p>\n            </Card>\n            \n            <Card className=\"text-center p-6 border-2 border-skd-shop/20 hover:border-skd-shop/50 transition-colors\">\n              <div className=\"w-16 h-16 bg-skd-shop/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <span className=\"text-2xl\">ð¸</span>\n              </div>\n              <h4 className=\"font-playfair font-semibold text-gray-800 mb-3\">Fleurs & Compositions</h4>\n              <p className=\"text-gray-600 mb-4\">Artificielles & naturelles pour tous Ã©vÃ©nements</p>\n              <p className=\"text-sm text-gray-500\">Ã partir de 25â¬</p>\n            </Card>\n            \n            <Card className=\"text-center p-6 border-2 border-skd-shop/20 hover:border-skd-shop/50 transition-colors\">\n              <div className=\"w-16 h-16 bg-skd-shop/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <span className=\"text-2xl\">â¨</span>\n              </div>\n              <h4 className=\"font-playfair font-semibold text-gray-800 mb-3\">Objets DÃ©co</h4>\n              <p className=\"text-gray-600 mb-4\">Vases, lanternes, guirlandes pour la maison</p>\n              <p className=\"text-sm text-gray-500\">Ã partir de 10â¬</p>\n            </Card>\n          </div>\n        </div>\n      </section>\n    </Layout>\n  );\n}\n","size_bytes":7089},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }","size_bytes":1127},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/About.tsx":{"content":"import Layout from \"@/components/Layout\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Calendar, MapPin, Phone, Heart, Sparkles, Target } from \"lucide-react\";\n\nexport default function About() {\n  const values = [\n    {\n      icon: Sparkles,\n      title: \"CrÃ©ativitÃ©\",\n      description: \"Chaque projet est unique, chaque dÃ©tail a du sens.\"\n    },\n    {\n      icon: Heart,\n      title: \"FiabilitÃ©\", \n      description: \"Nous respectons vos dÃ©lais, vos attentes et vos Ã©motions.\"\n    },\n    {\n      icon: Target,\n      title: \"Exigence\",\n      description: \"La qualitÃ©, dans le rendu comme dans le service.\"\n    }\n  ];\n\n  const timeline = [\n    {\n      year: \"2017\",\n      event: \"Lancement de l'activitÃ© en dÃ©coration Ã©vÃ©nementielle\"\n    },\n    {\n      year: \"2024\", \n      event: \"CrÃ©ation de l'entitÃ© SKD Group\"\n    },\n    {\n      year: \"2025\",\n      event: \"DÃ©veloppement de pÃ´les spÃ©cialisÃ©s pour une offre 360Â°\"\n    }\n  ];\n\n  const expertise = [\n    \"CrÃ©ation de papeterie et cadeaux personnalisÃ©s\",\n    \"ScÃ©nographie Ã©vÃ©nementielle\", \n    \"CrÃ©ation visuelle personnalisÃ©e\",\n    \"Design floral et ballons\",\n    \"Logistique et coordination d'Ã©vÃ©nements\",\n    \"Home staging & home organizing\"\n  ];\n\n  return (\n    <Layout>\n      {/* Header */}\n      <section className=\"py-20 bg-gradient-to-br from-gold/10 to-white\">\n        <div className=\"max-w-6xl mx-auto px-4 text-center\">\n          <h1 className=\"text-4xl md:text-6xl font-playfair font-bold text-gray-800 mb-4\">\n            Ã propos de <span className=\"metallic-gold\">Pajusly</span>\n          </h1>\n          <p className=\"text-xl text-gray-600 mb-8\">Fondatrice de SakaDeco Group</p>\n          <div className=\"flex items-center justify-center space-x-6 text-gray-600\">\n            <div className=\"flex items-center space-x-2\">\n              <MapPin className=\"text-gold w-5 h-5\" />\n              <span>Bordeaux</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Phone className=\"text-gold w-5 h-5\" />\n              <span>06 88 00 39 28</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Calendar className=\"text-gold w-5 h-5\" />\n              <span>Depuis 2017</span>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* About Pajusly */}\n      <section className=\"py-20\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1573496359142-b8d87734a5a2?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80\" \n                alt=\"Portrait professionnel de Pajusly, fondatrice\" \n                className=\"rounded-2xl shadow-2xl w-full\"\n              />\n            </div>\n            <div>\n              <h2 className=\"text-3xl font-playfair font-bold text-gray-800 mb-6\">Mon histoire</h2>\n              <div className=\"space-y-4 text-gray-700 leading-relaxed\">\n                <p>\n                  Je me prÃ©sente, je suis Pajusly ! J'habite Ã  Bordeaux et je suis l'heureuse maman de deux enfants, \n                  de vÃ©ritables petits bouts en train !\n                </p>\n                <p>\n                  CÃ´tÃ© professionnel, j'ai principalement occupÃ© des postes de conseillÃ¨re et de gestionnaire clientÃ¨le \n                  au sein de grandes entreprises. Mais depuis toujours, ma vÃ©ritable passion, c'est la dÃ©coration.\n                </p>\n                <p>\n                  Aussi loin que je m'en souvienne, j'ai toujours pris plaisir Ã  organiser ou Ã  participer Ã  la mise en place \n                  de surprises, de fÃªtes ou de rassemblements familiaux.\n                </p>\n                <p>\n                  C'est ainsi qu'est nÃ© SakaDeco Events, une aventure nÃ©e de l'envie de rassembler mes compÃ©tences \n                  professionnelles, ma crÃ©ativitÃ© et mon amour pour l'organisation au sein d'une seule et mÃªme entreprise : \n                  la dÃ©coration Ã©vÃ©nementielle.\n                </p>\n                <p>\n                  Aujourd'hui, je suis fiÃ¨re d'Ã©voluer dans cet univers qui me passionne. Je me suis Ã©galement formÃ©e et \n                  certifiÃ©e dans le design floral, la personnalisation d'objets, la dÃ©coration de ballons et l'Ã©vÃ©nementiel, \n                  afin de proposer des prestations encore plus abouties.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Timeline */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl font-playfair font-bold text-gray-800 mb-4\">Dates clÃ©s</h2>\n            <p className=\"text-xl text-gray-600\">L'Ã©volution de SakaDeco Group</p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-3 gap-8\">\n            {timeline.map((item) => (\n              <Card key={item.year} className=\"text-center border-2 border-gold/20\">\n                <CardHeader>\n                  <div className=\"text-4xl font-playfair font-bold text-gold mb-2\">{item.year}</div>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-700\">{item.event}</p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Mission Vision Values */}\n      <section className=\"py-20\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-3 gap-8\">\n            \n            <Card className=\"border-2 border-gold/20\">\n              <CardHeader>\n                <CardTitle className=\"text-2xl font-playfair text-gold\">Mission</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-gray-700\">\n                  Offrir Ã  chaque client une expÃ©rience sur-mesure, qu'il s'agisse d'un Ã©vÃ©nement, \n                  d'un intÃ©rieur ou d'un besoin de personnalisation, avec Ã©lÃ©gance, efficacitÃ© et sens du dÃ©tail.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"border-2 border-gold/20\">\n              <CardHeader>\n                <CardTitle className=\"text-2xl font-playfair text-gold\">Vision</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-gray-700\">\n                  Devenir une rÃ©fÃ©rence dans les services de dÃ©coration, d'organisation et de \n                  personnalisation haut de gamme dans la rÃ©gion bordelaise et au-delÃ .\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"border-2 border-gold/20\">\n              <CardHeader>\n                <CardTitle className=\"text-2xl font-playfair text-gold\">Ambition</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-gray-700\">\n                  Offrir une solution globale autour de la dÃ©coration, de l'organisation d'Ã©vÃ©nements \n                  et du bien-Ãªtre chez soi, structurÃ©e sous une identitÃ© crÃ©ative et professionnelle.\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Values */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl font-playfair font-bold text-gray-800 mb-4\">Nos valeurs</h2>\n            <p className=\"text-xl text-gray-600\">Ce qui guide notre approche</p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-3 gap-8\">\n            {values.map((value) => {\n              const IconComponent = value.icon;\n              return (\n                <div key={value.title} className=\"text-center\">\n                  <div className=\"w-16 h-16 bg-gold/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <IconComponent className=\"text-gold w-8 h-8\" />\n                  </div>\n                  <h3 className=\"text-xl font-playfair font-semibold text-gray-800 mb-2\">{value.title}</h3>\n                  <p className=\"text-gray-600\">{value.description}</p>\n                </div>\n              );\n            })}\n          </div>\n          \n          <div className=\"grid md:grid-cols-2 gap-8 mt-16\">\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-gold/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <span className=\"text-gold text-2xl\">ð¤</span>\n              </div>\n              <h3 className=\"text-xl font-playfair font-semibold text-gray-800 mb-2\">SimplicitÃ©</h3>\n              <p className=\"text-gray-600\">Rendre les choses belles sans les compliquer.</p>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-gold/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <span className=\"text-gold text-2xl\">ð</span>\n              </div>\n              <h3 className=\"text-xl font-playfair font-semibold text-gray-800 mb-2\">Ãcoute</h3>\n              <p className=\"text-gray-600\">Vous Ãªtes au cÅur du projet.</p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Expertise */}\n      <section className=\"py-20\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl font-playfair font-bold text-gray-800 mb-4\">Domaines d'expertise</h2>\n            <p className=\"text-xl text-gray-600\">Mes compÃ©tences au service de vos projets</p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {expertise.map((skill) => (\n              <Badge key={skill} variant=\"outline\" className=\"text-center p-4 border-gold text-gray-700 hover:bg-gold/10\">\n                {skill}\n              </Badge>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Company Description */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-playfair font-bold text-gray-800 mb-4\">SKD Group aujourd'hui</h2>\n            <p className=\"text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed\">\n              SKD Group est une entreprise spÃ©cialisÃ©e dans la crÃ©ation et vente d'accessoires dÃ©coratifs, \n              la personnalisation d'objets, la dÃ©coration d'Ã©vÃ©nements, la location de matÃ©riel festif, \n              l'organisation complÃ¨te d'Ã©vÃ©nements et la dÃ©coration intÃ©rieure.\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-2 gap-8\">\n            <Card className=\"border-2 border-gold/20\">\n              <CardHeader>\n                <CardTitle className=\"text-xl font-playfair text-gold\">Zone d'intervention</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-gray-700 mb-4\">\n                  <strong>Bordeaux MÃ©tropole</strong> - Notre base principale\n                </p>\n                <p className=\"text-gray-600\">\n                  Nous intervenons principalement sur Bordeaux MÃ©tropole avec possibilitÃ© de dÃ©placements \n                  dans toute la rÃ©gion Nouvelle-Aquitaine selon les projets.\n                </p>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"border-2 border-gold/20\">\n              <CardHeader>\n                <CardTitle className=\"text-xl font-playfair text-gold\">Organisation</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-gray-700 mb-4\">\n                  Nous n'avons pas de showroom permanent. Pour toute demande, envoyez-nous la liste \n                  des Ã©lÃ©ments par email.\n                </p>\n                <p className=\"text-gray-600\">\n                  Les commandes sont traitÃ©es par ordre de date d'Ã©vÃ©nement pour garantir la meilleure \n                  organisation possible.\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n    </Layout>\n  );\n}","size_bytes":12535},"client/src/pages/Contact.tsx":{"content":"import Layout from \"@/components/Layout\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { Phone, Mail, MapPin, Clock, Facebook, Instagram, MessageSquare } from \"lucide-react\";\n\nexport default function Contact() {\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // Handle form submission\n  };\n\n  return (\n    <Layout>\n      {/* Header */}\n      <section className=\"py-20 bg-gradient-to-br from-gold/10 to-white\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h1 className=\"text-4xl font-playfair font-bold text-gray-800 mb-4\">Contactez-nous</h1>\n            <p className=\"text-xl text-gray-600 mb-2\">PrÃªts Ã  donner vie Ã  vos projets ?</p>\n            <p className=\"text-lg font-playfair text-gold italic\">Â« Transformons vos idÃ©es en rÃ©alitÃ© Â»</p>\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Information & Form */}\n      <section className=\"py-20\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12\">\n            \n            {/* Contact Information */}\n            <div className=\"space-y-8\">\n              <div>\n                <h2 className=\"text-3xl font-playfair font-bold text-gray-800 mb-6\">Informations de contact</h2>\n                <div className=\"space-y-6\">\n                  \n                  <div className=\"flex items-start space-x-4\">\n                    <div className=\"w-12 h-12 bg-gold/20 rounded-full flex items-center justify-center mt-1\">\n                      <Phone className=\"text-gold w-6 h-6\" />\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold text-gray-800 mb-1\">TÃ©lÃ©phone</h3>\n                      <p className=\"text-gray-600\">06 88 00 39 28</p>\n                      <p className=\"text-sm text-gray-500\">Lundi - Samedi, 9h - 19h</p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-start space-x-4\">\n                    <div className=\"w-12 h-12 bg-gold/20 rounded-full flex items-center justify-center mt-1\">\n                      <Mail className=\"text-gold w-6 h-6\" />\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold text-gray-800 mb-1\">Email</h3>\n                      <p className=\"text-gray-600\">contact@sakadeco-group.fr</p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-start space-x-4\">\n                    <div className=\"w-12 h-12 bg-gold/20 rounded-full flex items-center justify-center mt-1\">\n                      <MapPin className=\"text-gold w-6 h-6\" />\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold text-gray-800 mb-1\">Zone d'intervention</h3>\n                      <p className=\"text-gray-600\">Bordeaux MÃ©tropole</p>\n                      <p className=\"text-sm text-gray-500\">DÃ©placements possibles dans toute la rÃ©gion</p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-start space-x-4\">\n                    <div className=\"w-12 h-12 bg-gold/20 rounded-full flex items-center justify-center mt-1\">\n                      <Clock className=\"text-gold w-6 h-6\" />\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold text-gray-800 mb-1\">Horaires</h3>\n                      <p className=\"text-gray-600\">Lundi - Vendredi : 9h - 18h</p>\n                      <p className=\"text-gray-600\">Samedi : 9h - 17h</p>\n                      <p className=\"text-gray-600\">Dimanche : Sur rendez-vous</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Social Media */}\n              <div>\n                <h3 className=\"text-xl font-playfair font-semibold text-gray-800 mb-4\">Suivez-nous</h3>\n                <div className=\"flex space-x-4\">\n                  <Button variant=\"outline\" size=\"icon\" className=\"border-gold hover:bg-gold hover:text-white\">\n                    <Facebook className=\"w-5 h-5\" />\n                  </Button>\n                  <Button variant=\"outline\" size=\"icon\" className=\"border-gold hover:bg-gold hover:text-white\">\n                    <Instagram className=\"w-5 h-5\" />\n                  </Button>\n                  <Button variant=\"outline\" size=\"icon\" className=\"border-gold hover:bg-gold hover:text-white\">\n                    <MessageSquare className=\"w-5 h-5\" />\n                  </Button>\n                </div>\n              </div>\n            </div>\n\n            {/* Contact Form */}\n            <Card className=\"border-2 border-gold/20\">\n              <CardHeader>\n                <CardTitle className=\"text-2xl font-playfair\">Demande de devis gratuit</CardTitle>\n                <p className=\"text-gray-600\">DÃ©crivez-nous votre projet et recevez une estimation personnalisÃ©e</p>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={handleSubmit} className=\"space-y-6\">\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"firstName\">PrÃ©nom *</Label>\n                      <Input id=\"firstName\" required />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"lastName\">Nom *</Label>\n                      <Input id=\"lastName\" required />\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"email\">Email *</Label>\n                    <Input id=\"email\" type=\"email\" required />\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"phone\">TÃ©lÃ©phone</Label>\n                    <Input id=\"phone\" type=\"tel\" />\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"service\">Service souhaitÃ©</Label>\n                    <select \n                      id=\"service\" \n                      className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-gold focus:border-transparent\"\n                    >\n                      <option value=\"\">SÃ©lectionnez un service</option>\n                      <option value=\"shop\">SKD Shop - Vente de produits</option>\n                      <option value=\"crea\">SKD CrÃ©a - Personnalisation</option>\n                      <option value=\"rent\">SKD Rent - Location de matÃ©riel</option>\n                      <option value=\"events\">SKD Events - DÃ©coration d'Ã©vÃ©nements</option>\n                      <option value=\"home\">SKD Home - DÃ©coration intÃ©rieure</option>\n                      <option value=\"co\">SKD & Co - Organisation d'Ã©vÃ©nements</option>\n                    </select>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"eventDate\">Date de l'Ã©vÃ©nement</Label>\n                    <Input id=\"eventDate\" type=\"date\" />\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"budget\">Budget approximatif</Label>\n                    <select \n                      id=\"budget\" \n                      className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-gold focus:border-transparent\"\n                    >\n                      <option value=\"\">SÃ©lectionnez votre budget</option>\n                      <option value=\"moins-500\">Moins de 500â¬</option>\n                      <option value=\"500-1000\">500â¬ - 1000â¬</option>\n                      <option value=\"1000-2500\">1000â¬ - 2500â¬</option>\n                      <option value=\"2500-5000\">2500â¬ - 5000â¬</option>\n                      <option value=\"plus-5000\">Plus de 5000â¬</option>\n                    </select>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"message\">DÃ©crivez votre projet *</Label>\n                    <Textarea \n                      id=\"message\" \n                      placeholder=\"Parlez-nous de votre Ã©vÃ©nement, de vos attentes, de vos idÃ©es...\" \n                      className=\"min-h-[120px]\"\n                      required \n                    />\n                  </div>\n\n                  <Button type=\"submit\" className=\"w-full bg-gold hover:bg-gold/90 text-white py-3 text-lg\">\n                    Envoyer ma demande\n                  </Button>\n                </form>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* About Pajusly */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"text-center\">\n            <h2 className=\"text-3xl font-playfair font-bold text-gray-800 mb-6\">Pourquoi choisir SakaDeco Group ?</h2>\n            <div className=\"grid md:grid-cols-3 gap-8 mt-12\">\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 bg-gold/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <span className=\"text-2xl\">ð¨</span>\n                </div>\n                <h3 className=\"text-xl font-playfair font-semibold text-gray-800 mb-2\">CrÃ©ativitÃ© sur mesure</h3>\n                <p className=\"text-gray-600\">Chaque projet est unique et mÃ©rite une attention particuliÃ¨re</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 bg-gold/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <span className=\"text-2xl\">â­</span>\n                </div>\n                <h3 className=\"text-xl font-playfair font-semibold text-gray-800 mb-2\">QualitÃ© premium</h3>\n                <p className=\"text-gray-600\">MatÃ©riaux et prestations de haute qualitÃ© pour vos Ã©vÃ©nements</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 bg-gold/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <span className=\"text-2xl\">ð¤</span>\n                </div>\n                <h3 className=\"text-xl font-playfair font-semibold text-gray-800 mb-2\">Accompagnement complet</h3>\n                <p className=\"text-gray-600\">De la conception Ã  la rÃ©alisation, nous vous accompagnons</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </Layout>\n  );\n}","size_bytes":10825},"README.md":{"content":"# SakaDeco Group - Site Web Complet\n\nSite web professionnel pour SAKADECO Group avec 6 pÃ´les d'activitÃ© : dÃ©coration d'Ã©vÃ©nements, personnalisation de produits, location de matÃ©riel, organisation d'Ã©vÃ©nements, dÃ©coration intÃ©rieure et coordination business.\n\n## ð DÃ©marrage Rapide\n\n### PrÃ©requis\n- Node.js 18+ \n- PostgreSQL (automatiquement configurÃ© sur Replit)\n\n### Installation et Lancement\n\n```bash\n# 1. Installer les dÃ©pendances\nnpm install\n\n# 2. Configurer la base de donnÃ©es\nnpm run db:push\n\n# 3. Lancer le projet\nnpm run dev\n```\n\nLe site sera accessible sur `http://localhost:5000` (ou sur votre URL Replit).\n\n## ðï¸ Architecture du Projet\n\n### Structure des Dossiers\n```\nâââ client/src/           # Frontend React + TypeScript\nâ   âââ components/       # Composants rÃ©utilisables\nâ   âââ pages/           # Pages de l'application\nâ   âââ hooks/           # Hooks React personnalisÃ©s\nâ   âââ lib/             # Utilitaires et configuration\nâââ server/              # Backend Express + TypeScript\nâ   âââ routes.ts        # Routes API\nâ   âââ storage.ts       # Interface de stockage\nâ   âââ db.ts           # Configuration base de donnÃ©es\nâââ shared/              # Types et schÃ©mas partagÃ©s\nâ   âââ schema.ts        # SchÃ©mas Drizzle ORM\nâââ package.json         # Configuration du projet\n```\n\n### Technologies UtilisÃ©es\n- **Frontend**: React 18, TypeScript, Tailwind CSS, Shadcn/UI\n- **Backend**: Express.js, TypeScript\n- **Base de donnÃ©es**: PostgreSQL avec Drizzle ORM\n- **Authentification**: Replit Auth\n- **Build**: Vite\n- **Styling**: Tailwind CSS avec thÃ¨me personnalisÃ©\n\n## ð¨ FonctionnalitÃ©s\n\n### 6 PÃ´les d'ActivitÃ©\n1. **SKD Shop** - Ballons, fleurs & accessoires\n2. **SKD CrÃ©a** - Personnalisation & papeterie  \n3. **SKD Rent** - Location de matÃ©riel festif\n4. **SKD Events** - DÃ©coration d'Ã©vÃ©nements\n5. **SKD Home** - DÃ©coration intÃ©rieure & Home organizing\n6. **SKD & Co** - Organisation d'Ã©vÃ©nements\n\n### Composants Modernes\n- **Newsletter** - Inscription Ã  la newsletter\n- **Avis Clients** - TÃ©moignages et Ã©valuations\n- **Galerie** - Showcase des rÃ©alisations\n- **Personnalisation** - Configurateur de produits\n- **RÃ©servation** - SystÃ¨me de location\n- **Contact** - Formulaires de devis\n\n## ð Base de DonnÃ©es\n\n### Tables Principales\n- `users` - Utilisateurs et profils\n- `products` - Catalogue produits\n- `orders` - Commandes et suivi\n- `rentals` - Locations de matÃ©riel\n- `quotes` - Devis personnalisÃ©s\n- `reviews` - Avis clients\n- `newsletter_subscriptions` - Abonnements newsletter\n- `gallery_items` - Portfolio d'images\n\n### Migration\n```bash\n# Appliquer les changements de schÃ©ma\nnpm run db:push\n\n# GÃ©nerer les types TypeScript\nnpm run db:generate\n```\n\n## ð ï¸ Scripts Disponibles\n\n```bash\n# DÃ©veloppement\nnpm run dev          # Lance le serveur de dÃ©veloppement\n\n# Base de donnÃ©es\nnpm run db:push      # Applique les changements de schÃ©ma\nnpm run db:generate  # GÃ©nÃ¨re les types TypeScript\nnpm run db:studio    # Interface admin Drizzle Studio\n\n# Build\nnpm run build        # Build de production\nnpm start           # Lance la version de production\n```\n\n## ð¯ API Endpoints\n\n### Produits\n- `GET /api/products` - Liste des produits\n- `GET /api/products/:id` - DÃ©tail d'un produit\n- `POST /api/products` - CrÃ©er un produit (admin)\n\n### Commandes\n- `GET /api/orders` - Historique des commandes\n- `POST /api/orders` - CrÃ©er une commande\n\n### Location\n- `GET /api/rentals/availability` - VÃ©rifier disponibilitÃ©\n- `POST /api/rentals` - CrÃ©er une rÃ©servation\n\n### Newsletter\n- `POST /api/newsletter/subscribe` - S'abonner Ã  la newsletter\n- `GET /api/newsletter` - Liste des abonnÃ©s (admin)\n\n### Avis\n- `GET /api/reviews` - Avis publiÃ©s\n- `POST /api/reviews` - Soumettre un avis\n\n### Galerie\n- `GET /api/gallery` - Images de la galerie\n- `POST /api/gallery` - Ajouter une image (admin)\n\n## ð§ Configuration\n\n### Variables d'Environnement\n```bash\n# Base de donnÃ©es (automatique sur Replit)\nDATABASE_URL=postgresql://...\nPGHOST=...\nPGPORT=...\nPGUSER=...\nPGPASSWORD=...\nPGDATABASE=...\n\n# Environnement\nNODE_ENV=development\n```\n\n### ThÃ¨me et Couleurs\nLe projet utilise un systÃ¨me de couleurs personnalisÃ© pour chaque pÃ´le :\n- **Gold** (`#D4AF37`) - Couleur principale\n- **SKD Shop** (`#F8BBD9`) - Rose pÃ¢le\n- **SKD CrÃ©a** (`#E1BEE7`) - Violet pÃ¢le\n- **SKD Rent** (`#B8E6D2`) - Vert menthe\n- **SKD Events** (`#FFF2B3`) - Jaune pÃ¢le\n- **SKD Home** (`#FCDAB7`) - Orange pÃ¢le\n- **SKD Co** (`#AED9F5`) - Bleu pÃ¢le\n\n## ð DÃ©ploiement sur Replit\n\n1. Fork ou importer le projet sur Replit\n2. Les variables d'environnement seront automatiquement configurÃ©es\n3. Cliquer sur \"Run\" pour lancer le projet\n4. La base de donnÃ©es PostgreSQL sera automatiquement provisionnÃ©e\n\n## ð± Responsive Design\n\nLe site est entiÃ¨rement responsive et optimisÃ© pour :\n- ð± Mobile (320px+)\n- ð± Tablet (768px+)\n- ð» Desktop (1024px+)\n- ð¥ï¸ Large screens (1440px+)\n\n## ð¨ Personnalisation\n\n### Ajouter un Nouveau Service\n1. Modifier `client/src/pages/Home.tsx` - Ajouter dans le tableau `services`\n2. CrÃ©er la page dans `client/src/pages/`\n3. Ajouter la route dans `client/src/App.tsx`\n4. DÃ©finir les couleurs dans `client/src/index.css`\n\n### Modifier le ThÃ¨me\nLes couleurs sont dÃ©finies dans `client/src/index.css` avec les variables CSS custom properties.\n\n## ð¤ Contribution\n\n1. Fork le projet\n2. CrÃ©er une branche feature (`git checkout -b feature/AmazingFeature`)\n3. Commit les changements (`git commit -m 'Add some AmazingFeature'`)\n4. Push sur la branche (`git push origin feature/AmazingFeature`)\n5. Ouvrir une Pull Request\n\n## ð Licence\n\nCe projet est sous licence MIT. Voir le fichier `LICENSE` pour plus de dÃ©tails.\n\n## ð¤ Contact\n\n**Pajusly** - Fondatrice SakaDeco Group\n- ð 06 88 00 39 28\n- ð Bordeaux MÃ©tropole\n- âï¸ Contact via le formulaire du site\n\n---\n\n## ð Changelog\n\n### Version 2.0 - Janvier 2025\n- â Design moderne inspirÃ© de M&Paillettes\n- â Nouveaux composants : Newsletter, Avis, Galerie\n- â Interface amÃ©liorÃ©e avec animations\n- â SystÃ¨me de base de donnÃ©es complet\n- â API REST complÃ¨te\n- â Responsive design optimisÃ©\n\n### Version 1.0 - DÃ©cembre 2024\n- â Site initial avec 6 pÃ´les d'activitÃ©\n- â SystÃ¨me d'authentification\n- â Catalogue produits\n- â SystÃ¨me de commandes\n- â Interface d'administration","size_bytes":6481},"start.sh":{"content":"#!/bin/bash\n\n# Script de dÃ©marrage automatique pour SakaDeco Group\n# Ce script peut Ãªtre utilisÃ© sur n'importe quel IDE ou Replit\n\necho \"ð DÃ©marrage de SakaDeco Group...\"\n\n# VÃ©rifier que Node.js est installÃ©\nif ! command -v node &> /dev/null; then\n    echo \"â Node.js n'est pas installÃ©. Veuillez l'installer avant de continuer.\"\n    exit 1\nfi\n\n# VÃ©rifier que npm est installÃ©\nif ! command -v npm &> /dev/null; then\n    echo \"â npm n'est pas installÃ©. Veuillez l'installer avant de continuer.\"\n    exit 1\nfi\n\necho \"â Node.js et npm dÃ©tectÃ©s\"\n\n# Installer les dÃ©pendances si node_modules n'existe pas\nif [ ! -d \"node_modules\" ]; then\n    echo \"ð¦ Installation des dÃ©pendances...\"\n    npm install\n    if [ $? -ne 0 ]; then\n        echo \"â Erreur lors de l'installation des dÃ©pendances\"\n        exit 1\n    fi\n    echo \"â DÃ©pendances installÃ©es avec succÃ¨s\"\nelse\n    echo \"â DÃ©pendances dÃ©jÃ  installÃ©es\"\nfi\n\n# VÃ©rifier si la base de donnÃ©es est accessible\necho \"ðï¸ VÃ©rification de la base de donnÃ©es...\"\nif [ -z \"$DATABASE_URL\" ]; then\n    echo \"â ï¸ DATABASE_URL non dÃ©finie. Assurez-vous que PostgreSQL est configurÃ©.\"\n    echo \"ð Sur Replit, la base de donnÃ©es sera configurÃ©e automatiquement.\"\nelse\n    echo \"â Base de donnÃ©es configurÃ©e\"\nfi\n\n# Appliquer les migrations de base de donnÃ©es\necho \"ð Application des migrations de base de donnÃ©es...\"\nnpm run db:push\nif [ $? -ne 0 ]; then\n    echo \"â ï¸ Erreur lors de l'application des migrations (normal si c'est le premier dÃ©marrage)\"\nfi\n\necho \"ð Configuration terminÃ©e !\"\necho \"\"\necho \"ð Informations importantes :\"\necho \"   â¢ Site web : http://localhost:5000 (ou votre URL Replit)\"\necho \"   â¢ Frontend : React + TypeScript + Tailwind CSS\"\necho \"   â¢ Backend : Express + PostgreSQL + Drizzle ORM\"\necho \"   â¢ 6 pÃ´les d'activitÃ© : Shop, CrÃ©a, Rent, Events, Home, Co\"\necho \"\"\necho \"ð DÃ©marrage du serveur de dÃ©veloppement...\"\n\n# Lancer le serveur de dÃ©veloppement\nnpm run dev","size_bytes":2015},"tailwind.config.js":{"content":"/** @type {import('tailwindcss').Config} */\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        // SKD Brand Colors\n        gold: \"var(--gold)\",\n        'skd-shop': \"var(--skd-shop)\",\n        'skd-crea': \"var(--skd-crea)\",\n        'skd-rent': \"var(--skd-rent)\",\n        'skd-events': \"var(--skd-events)\",\n        'skd-home': \"var(--skd-home)\",\n        'skd-co': \"var(--skd-co)\",\n      },\n      fontFamily: {\n        sans: [\"var(--font-montserrat)\", \"Montserrat\", \"sans-serif\"],\n        serif: [\"var(--font-playfair)\", \"Playfair Display\", \"serif\"],\n        playfair: [\"var(--font-playfair)\", \"Playfair Display\", \"serif\"],\n        montserrat: [\"var(--font-montserrat)\", \"Montserrat\", \"sans-serif\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        shimmer: {\n          \"0%\": { backgroundPosition: \"-200px 0\" },\n          \"100%\": { backgroundPosition: \"calc(200px + 100%) 0\" },\n        },\n        float: {\n          \"0%, 100%\": { transform: \"translateY(0px)\" },\n          \"50%\": { transform: \"translateY(-10px)\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        shimmer: \"shimmer 2s linear infinite\",\n        float: \"float 3s ease-in-out infinite\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n};","size_bytes":3598},"client/src/components/Features.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  Palette, \n  Truck, \n  Heart, \n  Globe, \n  Sparkles, \n  Award,\n  Clock,\n  Shield\n} from \"lucide-react\";\n\nexport function Features() {\n  const features = [\n    {\n      icon: Palette,\n      title: \"Personnalisation Ã  l'infini\",\n      description: \"Tous nos produits sont personnalisables sur tous les thÃ¨mes. CrÃ©ez un univers unique qui vous ressemble.\",\n      color: \"text-purple-500\",\n      bgColor: \"bg-purple-50 dark:bg-purple-900/20\",\n    },\n    {\n      icon: Heart,\n      title: \"Fabrication fait main\",\n      description: \"Chaque crÃ©ation est rÃ©alisÃ©e avec soin et passion par nos artisans. QualitÃ© garantie.\",\n      color: \"text-pink-500\",\n      bgColor: \"bg-pink-50 dark:bg-pink-900/20\",\n    },\n    {\n      icon: Globe,\n      title: \"ExpÃ©dition Europe\",\n      description: \"Livraison dans toute l'Europe. Vos crÃ©ations voyagent jusqu'Ã  vous en toute sÃ©curitÃ©.\",\n      color: \"text-blue-500\",\n      bgColor: \"bg-blue-50 dark:bg-blue-900/20\",\n    },\n    {\n      icon: Clock,\n      title: \"Service rapide\",\n      description: \"PrÃ©paration et expÃ©dition rapides pour que vos Ã©vÃ©nements soient parfaits Ã  temps.\",\n      color: \"text-green-500\",\n      bgColor: \"bg-green-50 dark:bg-green-900/20\",\n    },\n    {\n      icon: Award,\n      title: \"QualitÃ© premium\",\n      description: \"MatÃ©riaux de haute qualitÃ© et finitions soignÃ©es pour des rÃ©sultats exceptionnels.\",\n      color: \"text-yellow-500\",\n      bgColor: \"bg-yellow-50 dark:bg-yellow-900/20\",\n    },\n    {\n      icon: Shield,\n      title: \"Satisfaction garantie\",\n      description: \"Votre satisfaction est notre prioritÃ©. Service client rÃ©actif et bienveillant.\",\n      color: \"text-indigo-500\",\n      bgColor: \"bg-indigo-50 dark:bg-indigo-900/20\",\n    },\n  ];\n\n  return (\n    <div className=\"space-y-8\">\n      <div className=\"text-center\">\n        <div className=\"flex items-center justify-center gap-2 mb-4\">\n          <Sparkles className=\"h-6 w-6 text-gold\" />\n          <h2 className=\"text-3xl font-playfair font-bold text-gray-800 dark:text-gray-100\">\n            Pourquoi choisir SakaDeco ?\n          </h2>\n          <Sparkles className=\"h-6 w-6 text-gold\" />\n        </div>\n        <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\n          Une expÃ©rience unique alliant crÃ©ativitÃ©, qualitÃ© et personnalisation \n          pour transformer vos moments en souvenirs inoubliables.\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n        {features.map((feature, index) => {\n          const Icon = feature.icon;\n          return (\n            <Card key={index} className=\"group hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2 border-gold/20\">\n              <CardContent className=\"p-6 text-center\">\n                <div className={`w-16 h-16 mx-auto mb-4 rounded-full ${feature.bgColor} flex items-center justify-center group-hover:scale-110 transition-transform duration-300`}>\n                  <Icon className={`h-8 w-8 ${feature.color}`} />\n                </div>\n                <h3 className=\"text-xl font-playfair font-bold text-gray-800 dark:text-gray-100 mb-3\">\n                  {feature.title}\n                </h3>\n                <p className=\"text-gray-600 dark:text-gray-300 leading-relaxed\">\n                  {feature.description}\n                </p>\n              </CardContent>\n            </Card>\n          );\n        })}\n      </div>\n\n      <div className=\"text-center\">\n        <Badge className=\"px-4 py-2 bg-gradient-to-r from-gold to-yellow-500 text-white border-none\">\n          Plus de 10,000 clients satisfaits\n        </Badge>\n      </div>\n    </div>\n  );\n}","size_bytes":3801},"client/src/components/GalleryShowcase.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { GalleryItem } from \"@shared/schema\";\nimport { Instagram, Heart, Eye } from \"lucide-react\";\n\ninterface GalleryShowcaseProps {\n  category?: string;\n  limit?: number;\n  showHeader?: boolean;\n}\n\nexport function GalleryShowcase({ category, limit = 6, showHeader = true }: GalleryShowcaseProps) {\n  const { data: galleryItems, isLoading } = useQuery<GalleryItem[]>({\n    queryKey: [\"/api/gallery\", category],\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {Array.from({ length: limit }).map((_, i) => (\n          <Card key={i} className=\"animate-pulse\">\n            <div className=\"aspect-square bg-gray-200 dark:bg-gray-700 rounded-t-lg\"></div>\n            <CardContent className=\"p-4\">\n              <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded mb-2\"></div>\n              <div className=\"h-3 bg-gray-200 dark:bg-gray-700 rounded w-2/3\"></div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    );\n  }\n\n  let filteredItems = galleryItems?.filter(item => item.isPublished) || [];\n  if (category) {\n    filteredItems = filteredItems.filter(item => item.category === category);\n  }\n  \n  const displayItems = filteredItems\n    .sort((a, b) => (b.orderIndex || 0) - (a.orderIndex || 0))\n    .slice(0, limit);\n\n  if (displayItems.length === 0) {\n    return (\n      <div className=\"text-center py-12\">\n        <Instagram className=\"h-12 w-12 text-gray-300 mx-auto mb-4\" />\n        <p className=\"text-gray-500\">Aucune rÃ©alisation pour le moment</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      {showHeader && (\n        <div className=\"text-center\">\n          <div className=\"flex items-center justify-center gap-3 mb-4\">\n            <Instagram className=\"h-8 w-8 text-pink-500\" />\n            <h3 className=\"text-3xl font-playfair font-bold text-gray-800 dark:text-gray-100\">\n              Nos RÃ©alisations\n            </h3>\n          </div>\n          <p className=\"text-gray-600 dark:text-gray-300 mb-2\">\n            DÃ©couvrez nos crÃ©ations et laissez-vous inspirer\n          </p>\n          <p className=\"text-sm text-gray-500 dark:text-gray-400 flex items-center justify-center gap-2\">\n            <span>Suivez-nous</span>\n            <Badge variant=\"outline\" className=\"bg-gradient-to-r from-pink-500 to-purple-500 text-white border-none\">\n              @sakadeco_group\n            </Badge>\n          </p>\n        </div>\n      )}\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {displayItems.map((item) => (\n          <Card key={item.id} className=\"group overflow-hidden hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 border-gold/20\">\n            <div className=\"relative aspect-square overflow-hidden\">\n              <img\n                src={item.imageUrl || \"/api/placeholder/400/400\"}\n                alt={item.title}\n                className=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-105\"\n              />\n              <div className=\"absolute inset-0 bg-black/40 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center\">\n                <div className=\"flex gap-4\">\n                  <div className=\"flex items-center gap-1 text-white\">\n                    <Heart className=\"h-5 w-5 fill-white\" />\n                    <span className=\"text-sm font-semibold\">24k</span>\n                  </div>\n                  <div className=\"flex items-center gap-1 text-white\">\n                    <Eye className=\"h-5 w-5\" />\n                    <span className=\"text-sm font-semibold\">1.2k</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <CardContent className=\"p-4\">\n              <h4 className=\"font-semibold text-gray-800 dark:text-gray-200 mb-2 group-hover:text-gold transition-colors\">\n                {item.title}\n              </h4>\n              {item.description && (\n                <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-3 line-clamp-2\">\n                  {item.description}\n                </p>\n              )}\n              <div className=\"flex items-center justify-between\">\n                <Badge \n                  variant=\"outline\" \n                  className={`text-xs ${getCategoryColor(item.category)}`}\n                >\n                  {getCategoryLabel(item.category)}\n                </Badge>\n                {item.tags && Array.isArray(item.tags) && (\n                  <div className=\"flex gap-1\">\n                    {(item.tags as string[]).slice(0, 2).map((tag, index) => (\n                      <span\n                        key={index}\n                        className=\"text-xs text-gray-500 dark:text-gray-400 bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded\"\n                      >\n                        #{tag}\n                      </span>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {showHeader && (\n        <div className=\"text-center\">\n          <a\n            href=\"https://instagram.com/sakadeco_group\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"inline-flex items-center gap-2 px-6 py-3 bg-gradient-to-r from-pink-500 to-purple-600 text-white rounded-full hover:from-pink-600 hover:to-purple-700 transition-all duration-300 transform hover:scale-105 font-semibold\"\n          >\n            <Instagram className=\"h-5 w-5\" />\n            Voir plus sur Instagram\n          </a>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction getCategoryColor(category: string): string {\n  const colors = {\n    events: \"border-skd-events text-skd-events bg-skd-events/10\",\n    home: \"border-skd-home text-skd-home bg-skd-home/10\",\n    shop: \"border-skd-shop text-skd-shop bg-skd-shop/10\",\n    rent: \"border-skd-rent text-skd-rent bg-skd-rent/10\",\n    crea: \"border-skd-crea text-skd-crea bg-skd-crea/10\",\n    co: \"border-skd-co text-skd-co bg-skd-co/10\",\n  };\n  return colors[category as keyof typeof colors] || \"border-gray-300 text-gray-600\";\n}\n\nfunction getCategoryLabel(category: string): string {\n  const labels = {\n    events: \"SKD Events\",\n    home: \"SKD Home\",\n    shop: \"SKD Shop\",\n    rent: \"SKD Rent\",\n    crea: \"SKD CrÃ©a\",\n    co: \"SKD Co\",\n  };\n  return labels[category as keyof typeof labels] || category;\n}","size_bytes":6638},"client/src/components/Newsletter.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Mail, Sparkles } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\nexport function Newsletter() {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const subscribeToNewsletter = useMutation({\n    mutationFn: (data: { email: string; name?: string }) =>\n      apiRequest(\"/api/newsletter/subscribe\", \"POST\", data),\n    onSuccess: () => {\n      toast({\n        title: \"Inscription rÃ©ussie !\",\n        description: \"Vous recevrez nos derniÃ¨res nouveautÃ©s et promotions.\",\n      });\n      setEmail(\"\");\n      setName(\"\");\n      queryClient.invalidateQueries({ queryKey: [\"/api/newsletter\"] });\n    },\n    onError: () => {\n      toast({\n        title: \"Erreur\",\n        description: \"Impossible de s'inscrire. Veuillez rÃ©essayer.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!email) return;\n    \n    subscribeToNewsletter.mutate({ email, name: name || undefined });\n  };\n\n  return (\n    <Card className=\"bg-gradient-to-br from-gold/10 to-white dark:from-gold/5 dark:to-gray-900 border-gold/20\">\n      <CardContent className=\"p-8\">\n        <div className=\"text-center mb-6\">\n          <div className=\"flex justify-center mb-4\">\n            <div className=\"p-3 bg-gold/20 rounded-full\">\n              <Mail className=\"h-6 w-6 text-gold\" />\n            </div>\n          </div>\n          <h3 className=\"text-2xl font-playfair font-bold text-gray-800 dark:text-gray-100 mb-2\">\n            Restez informÃ©(e) !\n          </h3>\n          <p className=\"text-gray-600 dark:text-gray-300 mb-2\">\n            Promotions et nouveaux produits\n          </p>\n          <p className=\"text-sm text-gray-500 dark:text-gray-400 flex items-center justify-center gap-1\">\n            <Sparkles className=\"h-4 w-4\" />\n            Soyez les premiers au courant\n          </p>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <Input\n              type=\"text\"\n              placeholder=\"Votre prÃ©nom (optionnel)\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              className=\"border-gold/30 focus:border-gold\"\n            />\n            <Input\n              type=\"email\"\n              placeholder=\"Votre adresse email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              className=\"border-gold/30 focus:border-gold\"\n            />\n          </div>\n          \n          <Button\n            type=\"submit\"\n            disabled={subscribeToNewsletter.isPending}\n            className=\"w-full bg-gradient-to-r from-gold to-yellow-500 hover:from-yellow-500 hover:to-gold text-white font-montserrat font-semibold py-3 transition-all duration-300 transform hover:scale-105\"\n          >\n            {subscribeToNewsletter.isPending ? \"Inscription...\" : \"S'inscrire\"}\n          </Button>\n        </form>\n\n        <p className=\"text-xs text-gray-400 dark:text-gray-500 text-center mt-4\">\n          Nous respectons votre vie privÃ©e. DÃ©sinscription Ã  tout moment.\n        </p>\n      </CardContent>\n    </Card>\n  );\n}","size_bytes":3633},"client/src/components/ReviewsSection.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Star, Quote } from \"lucide-react\";\nimport { Review } from \"@shared/schema\";\n\nexport function ReviewsSection() {\n  const { data: reviews, isLoading } = useQuery<Review[]>({\n    queryKey: [\"/api/reviews\"],\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        {[1, 2, 3].map((i) => (\n          <Card key={i} className=\"animate-pulse\">\n            <CardContent className=\"p-6\">\n              <div className=\"h-4 bg-gray-200 rounded mb-2\"></div>\n              <div className=\"h-16 bg-gray-200 rounded mb-4\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    );\n  }\n\n  const publishedReviews = reviews?.filter(review => review.isPublished) || [];\n\n  if (publishedReviews.length === 0) {\n    return (\n      <div className=\"text-center py-12\">\n        <Quote className=\"h-12 w-12 text-gray-300 mx-auto mb-4\" />\n        <p className=\"text-gray-500\">Aucun avis pour le moment</p>\n      </div>\n    );\n  }\n\n  const renderStars = (rating: number) => {\n    return (\n      <div className=\"flex gap-1\">\n        {[1, 2, 3, 4, 5].map((star) => (\n          <Star\n            key={star}\n            className={`h-4 w-4 ${\n              star <= rating ? \"fill-yellow-400 text-yellow-400\" : \"text-gray-300\"\n            }`}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      <div className=\"text-center\">\n        <h3 className=\"text-3xl font-playfair font-bold text-gray-800 dark:text-gray-100 mb-2\">\n          TÃ©moignages Clients\n        </h3>\n        <p className=\"text-gray-600 dark:text-gray-300\">\n          L'avis de nos clients qui nous font confiance\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {publishedReviews.map((review) => (\n          <Card key={review.id} className=\"hover:shadow-lg transition-shadow duration-300 border-gold/20\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                {renderStars(review.rating)}\n                <Quote className=\"h-6 w-6 text-gold/50\" />\n              </div>\n              \n              <blockquote className=\"text-gray-700 dark:text-gray-300 mb-4 italic\">\n                \"{review.comment}\"\n              </blockquote>\n              \n              <div className=\"flex items-center justify-between\">\n                <cite className=\"text-sm font-semibold text-gray-800 dark:text-gray-200 not-italic\">\n                  {review.customerName}\n                </cite>\n                {review.serviceType && (\n                  <span className=\"text-xs px-2 py-1 bg-gold/20 text-gold rounded-full\">\n                    {review.serviceType}\n                  </span>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      <div className=\"text-center\">\n        <div className=\"inline-flex items-center gap-2 px-4 py-2 bg-green-50 dark:bg-green-900/20 rounded-full border border-green-200 dark:border-green-800\">\n          <Star className=\"h-5 w-5 fill-yellow-400 text-yellow-400\" />\n          <span className=\"text-sm font-semibold text-green-800 dark:text-green-300\">\n            5.0 / 5 basÃ© sur {publishedReviews.length} avis\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":3541}}}